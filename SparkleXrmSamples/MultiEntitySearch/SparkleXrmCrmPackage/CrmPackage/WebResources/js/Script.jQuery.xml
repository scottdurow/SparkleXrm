<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Script.jQuery</name>
    </assembly>
    <members>
        <member name="T:jQueryApi.BooleanFunction">
            <summary>
            A callback that returns a value for the element at the specified index.
            </summary>
            <param name="index">The index of the element in the set.</param>
        </member>
        <member name="T:jQueryApi.jQueryDataHttpRequest`1">
            <summary>
            Represents an XMLHttpRequest object as a deferred object.
            </summary>
        </member>
        <member name="T:jQueryApi.IDeferred`1">
            <summary>
            Represents a deferred value.
            </summary>
        </member>
        <member name="M:jQueryApi.IDeferred`1.Always(System.Action[])">
            <summary>
            Add handlers to be called when the deferred object is resolved or
            rejected.
            </summary>
            <param name="callbacks">The callbacsk to invoke (in order).</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.IDeferred`1.Always(System.Action{`0}[])">
            <summary>
            Add handlers to be called when the deferred object is resolved or
            rejected.
            </summary>
            <param name="callbacks">The callbacsk to invoke (in order).</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.IDeferred`1.Done(System.Action[])">
            <summary>
            Add handlers to be called when the deferred object is resolved. If the
            deferred object is already resolved, the handlers are still invoked.
            </summary>
            <param name="doneCallbacks">The callbacks to invoke (in order).</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.IDeferred`1.Done(System.Action{`0}[])">
            <summary>
            Add handlers to be called when the deferred object is resolved. If the
            deferred object is already resolved, the handlers are still invoked.
            </summary>
            <param name="doneCallbacks">The callbacks to invoke (in order).</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.IDeferred`1.Fail(System.Action[])">
            <summary>
            Add handlers to be called when the deferred object is rejected. If the
            deferred object is already resolved, the handlers are still invoked.
            </summary>
            <param name="failCallbacks">The callbacks to invoke (in order).</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.IDeferred`1.Fail(System.Action{`0}[])">
            <summary>
            Add handlers to be called when the deferred object is rejected. If the
            deferred object is already resolved, the handlers are still invoked.
            </summary>
            <param name="failCallbacks">The callbacks to invoke (in order).</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.IDeferred`1.IsRejected">
            <summary>
            Determines whether the deferred object has been rejected.
            </summary>
            <returns>true if it has been rejected; false otherwise.</returns>
        </member>
        <member name="M:jQueryApi.IDeferred`1.IsResolved">
            <summary>
            Determines whether the deferred object has been resolved.
            </summary>
            <returns>true if it has been resolved; false otherwise.</returns>
        </member>
        <member name="M:jQueryApi.IDeferred`1.Pipe``1(jQueryApi.jQueryDeferredFilter{``0,`0})">
            <summary>
            Filters deffered objects.
            </summary>
            <param name="successFilter">The filter to invoke when the deferred object is resolved.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.IDeferred`1.Pipe``1(jQueryApi.jQueryDeferredFilter{``0,`0},jQueryApi.jQueryDeferredFilter{``0})">
            <summary>
            Filters deffered objects.
            </summary>
            <param name="successFilter">The filter to invoke when the deferred object is resolved.</param>
            <param name="failFilter">The filter to invoke when the deferred object is rejected.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.IDeferred`1.Pipe``1(System.Func{`0,jQueryApi.IDeferred{``0}})">
            <summary>
            Chains deffered objects.
            </summary>
            <param name="successChain">The filter to invoke when the deferred object is resolved.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.IDeferred`1.Then(System.Action,System.Action)">
            <summary>
            Add handlers to be called when the deferred object is resolved or rejected.
            If the object has already been resolved or rejected, the handlers are still invoked.
            </summary>
            <param name="doneCallback">The callback to invoke when the object is resolved.</param>
            <param name="failCallback">The callback to invoke when the object is rejected.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.IDeferred`1.Then(System.Action{`0},System.Action{`0})">
            <summary>
            Add handlers to be called when the deferred object is resolved or rejected.
            If the object has already been resolved or rejected, the handlers are still invoked.
            </summary>
            <param name="doneCallback">The callback to invoke when the object is resolved.</param>
            <param name="failCallback">The callback to invoke when the object is rejected.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.IDeferred`1.Then(System.Action[],System.Action[])">
            <summary>
            Add handlers to be called when the deferred object is resolved or rejected.
            If the object has already been resolved or rejected, the handlers are still invoked.
            </summary>
            <param name="doneCallbacks">The callbacks to invoke when the object is resolved.</param>
            <param name="failCallbacks">The callbacks to invoke when the object is rejected.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.IDeferred`1.Then(System.Action{`0}[],System.Action{`0}[])">
            <summary>
            Add handlers to be called when the deferred object is resolved or rejected.
            If the object has already been resolved or rejected, the handlers are still invoked.
            </summary>
            <param name="doneCallbacks">The callbacks to invoke when the object is resolved.</param>
            <param name="failCallbacks">The callbacks to invoke when the object is rejected.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDataHttpRequest`1.Abort">
            <summary>
            Aborts the request.
            </summary>
        </member>
        <member name="M:jQueryApi.jQueryDataHttpRequest`1.Always(System.Action[])">
            <summary>
            Add handlers to be called when the request completes or fails.
            </summary>
            <param name="callbacks">The callbacks to invoke (in order).</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDataHttpRequest`1.Always(System.Action{`0}[])">
            <summary>
            Add handlers to be called when the request completes or fails.
            </summary>
            <param name="callbacks">The callbacks to invoke (in order).</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDataHttpRequest`1.Complete(jQueryApi.AjaxCompletedCallback{`0})">
            <summary>
            Adds a callback to handle completion of the request.
            </summary>
            <param name="callback">The callback to invoke.</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDataHttpRequest`1.Done(System.Action[])">
            <summary>
            Add handlers to be called when the request is successfully completed. If the
            request is already completed, the handlers are still invoked.
            </summary>
            <param name="doneCallbacks">The callbacks to invoke (in order).</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDataHttpRequest`1.Done(System.Action{`0}[])">
            <summary>
            Add handlers to be called when the request is successfully completed. If the
            request is already completed, the handlers are still invoked.
            </summary>
            <param name="doneCallbacks">The callbacks to invoke (in order).</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDataHttpRequest`1.Error(jQueryApi.AjaxErrorCallback{`0})">
            <summary>
            Adds a callback to handle an error completing the request.
            </summary>
            <param name="callback">The callback to invoke.</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDataHttpRequest`1.Fail(System.Action[])">
            <summary>
            Add handlers to be called when the request errors. If the
            request is already completed, the handlers are still invoked.
            </summary>
            <param name="failCallbacks">The callbacks to invoke (in order).</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDataHttpRequest`1.Fail(System.Action{`0}[])">
            <summary>
            Add handlers to be called when the request errors. If the
            request is already completed, the handlers are still invoked.
            </summary>
            <param name="failCallbacks">The callbacks to invoke (in order).</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDataHttpRequest`1.GetAllResponseHeaders">
            <summary>
            Gets the response headers associated with the request.
            </summary>
            <returns>The response headers.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDataHttpRequest`1.GetResponseHeader(System.String)">
            <summary>
            Gets a specific response header associated with the request.
            </summary>
            <param name="name">The name of the response header.</param>
            <returns>The response header value.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDataHttpRequest`1.OverrideMimeType(System.String)">
            <summary>
            Sets the mime type on the request.
            </summary>
            <param name="type">The mime type to use.</param>
        </member>
        <member name="M:jQueryApi.jQueryDataHttpRequest`1.Pipe``1(jQueryApi.jQueryDeferredFilter{``0,`0})">
            <summary>
            Filters or chains the result of the request.
            </summary>
            <param name="successFilter">The filter to invoke when the request successfully completes.</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDataHttpRequest`1.Pipe``1(jQueryApi.jQueryDeferredFilter{``0,`0},jQueryApi.jQueryDeferredFilter{``0})">
            <summary>
            Filters or chains the result of the request.
            </summary>
            <param name="successFilter">The filter to invoke when the request successfully completes.</param>
            <param name="failFilter">The filter to invoke when the request fails.</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDataHttpRequest`1.SetRequestHeader(System.String,System.String)">
            <summary>
            Sets a request header value.
            </summary>
            <param name="name">The name of the request header.</param>
            <param name="value">The value of the request header.</param>
        </member>
        <member name="M:jQueryApi.jQueryDataHttpRequest`1.Success(jQueryApi.AjaxCallback{`0})">
            <summary>
            Adds a callback to handle a successful completion of the request.
            </summary>
            <param name="callback">The callback to invoke.</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDataHttpRequest`1.Success(jQueryApi.AjaxRequestCallback{`0})">
            <summary>
            Adds a callback to handle a successful completion of the request.
            </summary>
            <param name="callback">The callback to invoke.</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDataHttpRequest`1.Then(System.Action,System.Action)">
            <summary>
            Add handlers to be called when the request is completed. If the
            request is already completed, the handlers are still invoked.
            </summary>
            <param name="doneCallback">The callback to invoke when the request completes successfully.</param>
            <param name="failCallback">The callback to invoke when the request completes with an error.</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDataHttpRequest`1.Then(System.Action{`0},System.Action{`0})">
            <summary>
            Add handlers to be called when the request is completed. If the
            request is already completed, the handlers are still invoked.
            </summary>
            <param name="doneCallback">The callback to invoke when the request completes successfully.</param>
            <param name="failCallback">The callback to invoke when the request completes with an error.</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDataHttpRequest`1.Then(System.Action[],System.Action[])">
            <summary>
            Add handlers to be called when the request is completed. If the
            request is already completed, the handlers are still invoked.
            </summary>
            <param name="doneCallbacks">The callbacks to invoke when the request completes successfully.</param>
            <param name="failCallbacks">The callbacks to invoke when the request completes with an error.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDataHttpRequest`1.Then(System.Action{`0}[],System.Action{`0}[])">
            <summary>
            Add handlers to be called when the request is completed. If the
            request is already completed, the handlers are still invoked.
            </summary>
            <param name="doneCallbacks">The callbacks to invoke when the request completes successfully.</param>
            <param name="failCallbacks">The callbacks to invoke when the request completes with an error.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="P:jQueryApi.jQueryDataHttpRequest`1.ReadyState">
            <summary>
            The ready state property of the XmlHttpRequest object.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryDataHttpRequest`1.ResponseXml">
            <summary>
            The XML document for an XML response.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryDataHttpRequest`1.ResponseText">
            <summary>
            The text of the response.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryDataHttpRequest`1.Status">
            <summary>
            The status code associated with the response.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryDataHttpRequest`1.StatusText">
            <summary>
            The status text of the response.
            </summary>
        </member>
        <member name="T:jQueryApi.jQueryDeferredFilter">
            <summary>
            A callback that can filter a deferred object's resolved/rejected value.
            </summary>
            <param name="value">The value to be filtered.</param>
        </member>
        <member name="T:jQueryApi.jQueryDeferredFilter`1">
            <summary>
            A callback that can filter a deferred object's resolved/rejected value.
            </summary>
            <param name="value">The value to be filtered.</param>
        </member>
        <member name="T:jQueryApi.jQueryDeferredFilter`2">
            <summary>
            A callback that can filter a deferred object's resolved/rejected value.
            </summary>
            <typeparam name="TTargetData">The type of target data.</typeparam>
            <typeparam name="TSourceData">The type of source data.</typeparam>
            <param name="value">The source value to be filtered.</param>
            <returns>The target value.</returns>
        </member>
        <member name="T:jQueryApi.jQueryXmlHttpRequest">
            <summary>
            Represents an XMLHttpRequest object as a deferred object.
            </summary>
        </member>
        <member name="T:jQueryApi.IDeferred">
            <summary>
            Represents a deferred value.
            </summary>
        </member>
        <member name="M:jQueryApi.IDeferred.Always(System.Action[])">
            <summary>
            Add handlers to be called when the deferred object is resolved or
            rejected.
            </summary>
            <param name="callbacks">The callbacsk to invoke (in order).</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.IDeferred.Always(System.Callback[])">
            <summary>
            Add handlers to be called when the deferred object is resolved or
            rejected.
            </summary>
            <param name="callbacks">The callbacsk to invoke (in order).</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.IDeferred.Done(System.Action[])">
            <summary>
            Add handlers to be called when the deferred object is resolved. If the
            deferred object is already resolved, the handlers are still invoked.
            </summary>
            <param name="doneCallbacks">The callbacks to invoke (in order).</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.IDeferred.Done(System.Callback[])">
            <summary>
            Add handlers to be called when the deferred object is resolved. If the
            deferred object is already resolved, the handlers are still invoked.
            </summary>
            <param name="doneCallbacks">The callbacks to invoke (in order).</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.IDeferred.Fail(System.Action[])">
            <summary>
            Add handlers to be called when the deferred object is rejected. If the
            deferred object is already resolved, the handlers are still invoked.
            </summary>
            <param name="failCallbacks">The callbacks to invoke (in order).</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.IDeferred.Fail(System.Callback[])">
            <summary>
            Add handlers to be called when the deferred object is rejected. If the
            deferred object is already resolved, the handlers are still invoked.
            </summary>
            <param name="failCallbacks">The callbacks to invoke (in order).</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.IDeferred.IsRejected">
            <summary>
            Determines whether the deferred object has been rejected.
            </summary>
            <returns>true if it has been rejected; false otherwise.</returns>
        </member>
        <member name="M:jQueryApi.IDeferred.IsResolved">
            <summary>
            Determines whether the deferred object has been resolved.
            </summary>
            <returns>true if it has been resolved; false otherwise.</returns>
        </member>
        <member name="M:jQueryApi.IDeferred.Pipe(jQueryApi.jQueryDeferredFilter)">
            <summary>
            Filters or chains deffered objects.
            </summary>
            <param name="successFilter">The filter to invoke when the deferred object is resolved.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.IDeferred.Pipe(jQueryApi.jQueryDeferredFilter,jQueryApi.jQueryDeferredFilter)">
            <summary>
            Filters or chains deffered objects.
            </summary>
            <param name="successFilter">The filter to invoke when the deferred object is resolved.</param>
            <param name="failFilter">The filter to invoke when the deferred object is rejected.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.IDeferred.Then(System.Action,System.Action)">
            <summary>
            Add handlers to be called when the deferred object is resolved or rejected.
            If the object has already been resolved or rejected, the handlers are still invoked.
            </summary>
            <param name="doneCallback">The callback to invoke when the object is resolved.</param>
            <param name="failCallback">The callback to invoke when the object is rejected.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.IDeferred.Then(System.Callback,System.Callback)">
            <summary>
            Add handlers to be called when the deferred object is resolved or rejected.
            If the object has already been resolved or rejected, the handlers are still invoked.
            </summary>
            <param name="doneCallback">The callback to invoke when the object is resolved.</param>
            <param name="failCallback">The callback to invoke when the object is rejected.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.IDeferred.Then(System.Action[],System.Action[])">
            <summary>
            Add handlers to be called when the deferred object is resolved or rejected.
            If the object has already been resolved or rejected, the handlers are still invoked.
            </summary>
            <param name="doneCallbacks">The callbacks to invoke when the object is resolved.</param>
            <param name="failCallbacks">The callbacks to invoke when the object is rejected.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.IDeferred.Then(System.Callback[],System.Callback[])">
            <summary>
            Add handlers to be called when the deferred object is resolved or rejected.
            If the object has already been resolved or rejected, the handlers are still invoked.
            </summary>
            <param name="doneCallbacks">The callbacks to invoke when the object is resolved.</param>
            <param name="failCallbacks">The callbacks to invoke when the object is rejected.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryXmlHttpRequest.Abort">
            <summary>
            Aborts the request.
            </summary>
        </member>
        <member name="M:jQueryApi.jQueryXmlHttpRequest.Always(System.Action[])">
            <summary>
            Add handlers to be called when the request completes or fails.
            </summary>
            <param name="callbacks">The callbacks to invoke (in order).</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryXmlHttpRequest.Always(System.Callback[])">
            <summary>
            Add handlers to be called when the request completes or fails.
            </summary>
            <param name="callbacks">The callbacks to invoke (in order).</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryXmlHttpRequest.Complete(jQueryApi.AjaxCompletedCallback)">
            <summary>
            Adds a callback to handle completion of the request.
            </summary>
            <param name="callback">The callback to invoke.</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryXmlHttpRequest.Done(System.Action[])">
            <summary>
            Add handlers to be called when the request is successfully completed. If the
            request is already completed, the handlers are still invoked.
            </summary>
            <param name="doneCallbacks">The callbacks to invoke (in order).</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryXmlHttpRequest.Done(System.Callback[])">
            <summary>
            Add handlers to be called when the request is successfully completed. If the
            request is already completed, the handlers are still invoked.
            </summary>
            <param name="doneCallbacks">The callbacks to invoke (in order).</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryXmlHttpRequest.Error(jQueryApi.AjaxErrorCallback)">
            <summary>
            Adds a callback to handle an error completing the request.
            </summary>
            <param name="callback">The callback to invoke.</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryXmlHttpRequest.Fail(System.Action[])">
            <summary>
            Add handlers to be called when the request errors. If the
            request is already completed, the handlers are still invoked.
            </summary>
            <param name="failCallbacks">The callbacks to invoke (in order).</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryXmlHttpRequest.Fail(System.Callback[])">
            <summary>
            Add handlers to be called when the request errors. If the
            request is already completed, the handlers are still invoked.
            </summary>
            <param name="failCallbacks">The callbacks to invoke (in order).</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryXmlHttpRequest.GetAllResponseHeaders">
            <summary>
            Gets the response headers associated with the request.
            </summary>
            <returns>The response headers.</returns>
        </member>
        <member name="M:jQueryApi.jQueryXmlHttpRequest.GetResponseHeader(System.String)">
            <summary>
            Gets a specific response header associated with the request.
            </summary>
            <param name="name">The name of the response header.</param>
            <returns>The response header value.</returns>
        </member>
        <member name="M:jQueryApi.jQueryXmlHttpRequest.OverrideMimeType(System.String)">
            <summary>
            Sets the mime type on the request.
            </summary>
            <param name="type">The mime type to use.</param>
        </member>
        <member name="M:jQueryApi.jQueryXmlHttpRequest.Pipe(jQueryApi.jQueryDeferredFilter)">
            <summary>
            Filters or chains the result of the request.
            </summary>
            <param name="successFilter">The filter to invoke when the request successfully completes.</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryXmlHttpRequest.Pipe(jQueryApi.jQueryDeferredFilter,jQueryApi.jQueryDeferredFilter)">
            <summary>
            Filters or chains the result of the request.
            </summary>
            <param name="successFilter">The filter to invoke when the request successfully completes.</param>
            <param name="failFilter">The filter to invoke when the request fails.</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryXmlHttpRequest.SetRequestHeader(System.String,System.String)">
            <summary>
            Sets a request header value.
            </summary>
            <param name="name">The name of the request header.</param>
            <param name="value">The value of the request header.</param>
        </member>
        <member name="M:jQueryApi.jQueryXmlHttpRequest.Success(jQueryApi.AjaxCallback)">
            <summary>
            Adds a callback to handle a successful completion of the request.
            </summary>
            <param name="callback">The callback to invoke.</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryXmlHttpRequest.Success(jQueryApi.AjaxRequestCallback)">
            <summary>
            Adds a callback to handle a successful completion of the request.
            </summary>
            <param name="callback">The callback to invoke.</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryXmlHttpRequest.Then(System.Action,System.Action)">
            <summary>
            Add handlers to be called when the request is completed. If the
            request is already completed, the handlers are still invoked.
            </summary>
            <param name="doneCallback">The callback to invoke when the request completes successfully.</param>
            <param name="failCallback">The callback to invoke when the request completes with an error.</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryXmlHttpRequest.Then(System.Callback,System.Callback)">
            <summary>
            Add handlers to be called when the request is completed. If the
            request is already completed, the handlers are still invoked.
            </summary>
            <param name="doneCallback">The callback to invoke when the request completes successfully.</param>
            <param name="failCallback">The callback to invoke when the request completes with an error.</param>
            <returns>The current request object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryXmlHttpRequest.Then(System.Action[],System.Action[])">
            <summary>
            Add handlers to be called when the request is completed. If the
            request is already completed, the handlers are still invoked.
            </summary>
            <param name="doneCallbacks">The callbacks to invoke when the request completes successfully.</param>
            <param name="failCallbacks">The callbacks to invoke when the request completes with an error.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryXmlHttpRequest.Then(System.Callback[],System.Callback[])">
            <summary>
            Add handlers to be called when the request is completed. If the
            request is already completed, the handlers are still invoked.
            </summary>
            <param name="doneCallbacks">The callbacks to invoke when the request completes successfully.</param>
            <param name="failCallbacks">The callbacks to invoke when the request completes with an error.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="P:jQueryApi.jQueryXmlHttpRequest.ReadyState">
            <summary>
            The ready state property of the XmlHttpRequest object.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryXmlHttpRequest.ResponseXml">
            <summary>
            The XML document for an XML response.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryXmlHttpRequest.ResponseText">
            <summary>
            The text of the response.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryXmlHttpRequest.Status">
            <summary>
            The status code associated with the response.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryXmlHttpRequest.StatusText">
            <summary>
            The status text of the response.
            </summary>
        </member>
        <member name="T:jQueryApi.jQueryDeferredInitializer">
            <summary>
            A callback that can initialize a deferred object during construction.
            </summary>
            <param name="deferred">The deferred object being created.</param>
        </member>
        <member name="T:jQueryApi.jQueryDeferredInitializer`1">
            <summary>
            A callback that can initialize a deferred object during construction.
            </summary>
            <param name="deferred">The deferred object being created.</param>
        </member>
        <member name="T:jQueryApi.jQueryDeferred">
            <summary>
            Represents a deferred value.
            </summary>
        </member>
        <member name="M:jQueryApi.jQueryDeferred.Always(System.Action[])">
            <summary>
            Add handlers to be called when the deferred object is resolved or
            rejected.
            </summary>
            <param name="callbacks">The callbacks to invoke (in order).</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred.Always(System.Callback[])">
            <summary>
            Add handlers to be called when the deferred object is resolved or
            rejected.
            </summary>
            <param name="callbacks">The callbacks to invoke (in order).</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred.Done(System.Action[])">
            <summary>
            Add handlers to be called when the deferred object is resolved. If the
            deferred object is already resolved, the handlers are still invoked.
            </summary>
            <param name="doneCallbacks">The callbacks to invoke (in order).</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred.Done(System.Callback[])">
            <summary>
            Add handlers to be called when the deferred object is resolved. If the
            deferred object is already resolved, the handlers are still invoked.
            </summary>
            <param name="doneCallbacks">The callbacks to invoke (in order).</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred.Fail(System.Action[])">
            <summary>
            Add handlers to be called when the deferred object is rejected. If the
            deferred object is already resolved, the handlers are still invoked.
            </summary>
            <param name="failCallbacks">The callbacks to invoke (in order).</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred.Fail(System.Callback[])">
            <summary>
            Add handlers to be called when the deferred object is rejected. If the
            deferred object is already resolved, the handlers are still invoked.
            </summary>
            <param name="failCallbacks">The callbacks to invoke (in order).</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred.IsRejected">
            <summary>
            Determines whether the deferred object has been rejected.
            </summary>
            <returns>true if it has been rejected; false otherwise.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred.IsResolved">
            <summary>
            Determines whether the deferred object has been resolved.
            </summary>
            <returns>true if it has been resolved; false otherwise.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred.Promise">
            <summary>
            Returns a deferred object that can be further composed.
            </summary>
            <returns>A deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred.Reject(System.Object[])">
            <summary>
            Rejects the deferred object and call any failure callbacks with the specified arguments.
            </summary>
            <param name="args">The arguments to pass to the callbacks.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred.RejectWith(System.Object,System.Object[])">
            <summary>
            Rejects the deferred object and call any failure callbacks with the specified arguments
            using the specified context as the this parameter.
            </summary>
            <param name="context">The context in which the callback is invoked.</param>
            <param name="args">The arguments to pass to the callbacks.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred.Resolve(System.Object[])">
            <summary>
            Resolves the deferred object and call any done callbacks with the specified arguments.
            </summary>
            <param name="args">The arguments to pass to the callbacks.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred.ResolveWith(System.Object,System.Object[])">
            <summary>
            Resolves the deferred object and call any failure callbacks with the specified arguments
            using the specified context as the this parameter.
            </summary>
            <param name="context">The context in which the callback is invoked.</param>
            <param name="args">The arguments to pass to the callbacks.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred.Then(System.Action,System.Action)">
            <summary>
            Add handlers to be called when the deferred object is resolved or rejected.
            If the object has already been resolved or rejected, the handlers are still invoked.
            </summary>
            <param name="doneCallback">The callback to invoke when the object is resolved.</param>
            <param name="failCallback">The callback to invoke when the object is rejected.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred.Then(System.Callback,System.Callback)">
            <summary>
            Add handlers to be called when the deferred object is resolved or rejected.
            If the object has already been resolved or rejected, the handlers are still invoked.
            </summary>
            <param name="doneCallback">The callback to invoke when the object is resolved.</param>
            <param name="failCallback">The callback to invoke when the object is rejected.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred.Then(System.Action[],System.Action[])">
            <summary>
            Add handlers to be called when the deferred object is resolved or rejected.
            If the object has already been resolved or rejected, the handlers are still invoked.
            </summary>
            <param name="doneCallbacks">The callbacks to invoke when the object is resolved.</param>
            <param name="failCallbacks">The callbacks to invoke when the object is rejected.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred.Then(System.Callback[],System.Callback[])">
            <summary>
            Add handlers to be called when the deferred object is resolved or rejected.
            If the object has already been resolved or rejected, the handlers are still invoked.
            </summary>
            <param name="doneCallbacks">The callbacks to invoke when the object is resolved.</param>
            <param name="failCallbacks">The callbacks to invoke when the object is rejected.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="T:jQueryApi.jQueryDeferred`1">
            <summary>
            Represents a deferred value.
            </summary>
        </member>
        <member name="M:jQueryApi.jQueryDeferred`1.Always(System.Action[])">
            <summary>
            Add handlers to be called when the deferred object is resolved or
            rejected.
            </summary>
            <param name="callbacks">The callbacks to invoke (in order).</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred`1.Always(System.Action{`0}[])">
            <summary>
            Add handlers to be called when the deferred object is resolved or
            rejected.
            </summary>
            <param name="callbacks">The callbacks to invoke (in order).</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred`1.Done(System.Action[])">
            <summary>
            Add handlers to be called when the deferred object is resolved. If the
            deferred object is already resolved, the handlers are still invoked.
            </summary>
            <param name="doneCallbacks">The callbacks to invoke (in order).</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred`1.Done(System.Action{`0}[])">
            <summary>
            Add handlers to be called when the deferred object is resolved. If the
            deferred object is already resolved, the handlers are still invoked.
            </summary>
            <param name="doneCallbacks">The callbacks to invoke (in order).</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred`1.Fail(System.Action[])">
            <summary>
            Add handlers to be called when the deferred object is rejected. If the
            deferred object is already resolved, the handlers are still invoked.
            </summary>
            <param name="failCallbacks">The callbacks to invoke (in order).</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred`1.Fail(System.Action{`0}[])">
            <summary>
            Add handlers to be called when the deferred object is rejected. If the
            deferred object is already resolved, the handlers are still invoked.
            </summary>
            <param name="failCallbacks">The callbacks to invoke (in order).</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred`1.IsRejected">
            <summary>
            Determines whether the deferred object has been rejected.
            </summary>
            <returns>true if it has been rejected; false otherwise.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred`1.IsResolved">
            <summary>
            Determines whether the deferred object has been resolved.
            </summary>
            <returns>true if it has been resolved; false otherwise.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred`1.Promise">
            <summary>
            Returns a deferred object that can be further composed.
            </summary>
            <returns>A deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred`1.Reject(`0[])">
            <summary>
            Rejects the deferred object and call any failure callbacks with the specified arguments.
            </summary>
            <param name="args">The arguments to pass to the callbacks.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred`1.RejectWith(System.Object,`0[])">
            <summary>
            Rejects the deferred object and call any failure callbacks with the specified arguments
            using the specified context as the this parameter.
            </summary>
            <param name="context">The context in which the callback is invoked.</param>
            <param name="args">The arguments to pass to the callbacks.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred`1.Resolve(`0[])">
            <summary>
            Resolves the deferred object and call any done callbacks with the specified arguments.
            </summary>
            <param name="args">The arguments to pass to the callbacks.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred`1.ResolveWith(System.Object,`0[])">
            <summary>
            Resolves the deferred object and call any failure callbacks with the specified arguments
            using the specified context as the this parameter.
            </summary>
            <param name="context">The context in which the callback is invoked.</param>
            <param name="args">The arguments to pass to the callbacks.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred`1.Then(System.Action,System.Action)">
            <summary>
            Add handlers to be called when the deferred object is resolved or rejected.
            If the object has already been resolved or rejected, the handlers are still invoked.
            </summary>
            <param name="doneCallback">The callback to invoke when the object is resolved.</param>
            <param name="failCallback">The callback to invoke when the object is rejected.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred`1.Then(System.Action{`0},System.Action{`0})">
            <summary>
            Add handlers to be called when the deferred object is resolved or rejected.
            If the object has already been resolved or rejected, the handlers are still invoked.
            </summary>
            <param name="doneCallback">The callback to invoke when the object is resolved.</param>
            <param name="failCallback">The callback to invoke when the object is rejected.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred`1.Then(System.Action[],System.Action[])">
            <summary>
            Add handlers to be called when the deferred object is resolved or rejected.
            If the object has already been resolved or rejected, the handlers are still invoked.
            </summary>
            <param name="doneCallbacks">The callbacks to invoke when the object is resolved.</param>
            <param name="failCallbacks">The callbacks to invoke when the object is rejected.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryDeferred`1.Then(System.Action{`0}[],System.Action{`0}[])">
            <summary>
            Add handlers to be called when the deferred object is resolved or rejected.
            If the object has already been resolved or rejected, the handlers are still invoked.
            </summary>
            <param name="doneCallbacks">The callbacks to invoke when the object is resolved.</param>
            <param name="failCallbacks">The callbacks to invoke when the object is rejected.</param>
            <returns>The current deferred object.</returns>
        </member>
        <member name="T:jQueryApi.jQueryObject">
            <summary>
            Represents a jQuery result that wraps a set of elements.
            </summary>
        </member>
        <member name="M:jQueryApi.jQueryObject.#ctor">
            <summary>
            Initializes an instance of a jQueryObject.
            </summary>
        </member>
        <member name="M:jQueryApi.jQueryObject.Add(System.Html.Element)">
            <summary>
            Adds elements to the set of matched elements.
            </summary>
            <param name="element">The element to add.</param>
            <returns>The new jQueryObject with added elements.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Add(System.Html.Element[])">
            <summary>
            Adds elements to the set of matched elements.
            </summary>
            <param name="elements">The elements to add.</param>
            <returns>The new jQueryObject with added elements.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Add(jQueryApi.jQueryObject)">
            <summary>
            Adds elements to the set of matched elements.
            </summary>
            <param name="elements">The jQuery object representing the elements to add.</param>
            <returns>The new jQueryObject with added elements.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Add(System.String)">
            <summary>
            Adds elements to the set of matched elements.
            </summary>
            <param name="selector">The set of elements to select and add.</param>
            <returns>The new jQueryObject with added elements.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Add(System.String,System.Html.DocumentInstance)">
            <summary>
            Adds elements to the set of matched elements.
            </summary>
            <param name="selector">The set of elements to select and add.</param>
            <param name="context">The document to select elements from.</param>
            <returns>The new jQueryObject with added elements.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Add(System.String,System.Html.Element)">
            <summary>
            Adds elements to the set of matched elements.
            </summary>
            <param name="selector">The set of elements to select and add.</param>
            <param name="context">The root element to select elements from.</param>
            <returns>The new jQueryObject with added elements.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.AddClass(System.String)">
            <summary>
            Adds the specified class(es) to each of the set of matched elements.
            </summary>
            <param name="className">The class or classes to add.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.AddClass(jQueryApi.StringFunction)">
            <summary>
            Adds the CSS class returned by the specified function.
            </summary>
            <param name="cssFunction">The function that returns the CSS class to add.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.AddClass(jQueryApi.StringReplaceFunction)">
            <summary>
            Adds the CSS class returned by the specified function.
            </summary>
            <param name="cssFunction">The function that returns the CSS class to add.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.AddHtml(System.String)">
            <summary>
            Adds elements to the set of matched elements.
            </summary>
            <param name="markup">The HTML fragment to add.</param>
            <returns>The new jQueryObject with added elements.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.After(System.String)">
            <summary>
            Insert content after each element of the matching elements.
            </summary>
            <param name="content">The content to insert.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.After(jQueryApi.jQueryObject)">
            <summary>
            Insert content after each element of the matching elements.
            </summary>
            <param name="content">The jQueryObject containing the content.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.After(jQueryApi.StringFunction)">
            <summary>
            Insert content returned from the specified function after each element
            of the matching elements.
            </summary>
            <param name="contentFunction">The function that returns the content to insert.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.AjaxComplete(jQueryApi.AjaxEventHandler{System.Object})">
            <summary>
            Registers the event handler to be invoked when an Ajax request is
            completed.
            </summary>
            <param name="handler">The event handler.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.AjaxError(jQueryApi.AjaxErrorEventHandler{System.Object})">
            <summary>
            Registers the event handler to be invoked when there is an error
            completing an Ajax request.
            </summary>
            <param name="handler">The event handler.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.AjaxSend(jQueryApi.AjaxEventHandler{System.Object})">
            <summary>
            Registers the event handler to be invoked when an Ajax request is
            being sent.
            </summary>
            <param name="handler">The event handler.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.AjaxSuccess(jQueryApi.AjaxEventHandler{System.Object})">
            <summary>
            Registers the event handler to be invoked when an Ajax request is
            completed successfully.
            </summary>
            <param name="handler">The event handler.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.AjaxStart(System.Action)">
            <summary>
            Registers the callback to be invoked when there the first
            Ajax request is started.
            </summary>
            <param name="callback">The callback to invoke.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.AjaxStop(System.Action)">
            <summary>
            Registers the callback to be invoked when there are no more
            outstanding Ajax requests.
            </summary>
            <param name="callback">The callback to invoke.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.AndSelf">
            <summary>
            Add the previous set of elements on the stack to the current set.
            </summary>
            <returns>The new jQueryObject with added elements.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Animate(System.Collections.Dictionary)">
            <summary>
            Animates a set of CSS properties using the default duration.
            </summary>
            <param name="propertiesToAnimate">The properties to animate with their target values.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Animate(System.Collections.Dictionary,System.Int32)">
            <summary>
            Animates a set of CSS properties over the specified duration.
            </summary>
            <param name="propertiesToAnimate">The properties to animate with their target values.</param>
            <param name="duration">The duration in milliseconds for the animation.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Animate(System.Collections.Dictionary,System.Int32,jQueryApi.EffectEasing)">
            <summary>
            Animates a set of CSS properties over the specified duration.
            </summary>
            <param name="propertiesToAnimate">The properties to animate with their target values.</param>
            <param name="duration">The duration in milliseconds for the animation.</param>
            <param name="easing">The easing to apply to the animation.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Animate(System.Collections.Dictionary,System.Int32,jQueryApi.EffectEasing,System.Action)">
            <summary>
            Animates a set of CSS properties over the specified duration.
            </summary>
            <param name="propertiesToAnimate">The properties to animate with their target values.</param>
            <param name="duration">The duration in milliseconds for the animation.</param>
            <param name="easing">The easing to apply to the animation.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Animate(System.Collections.Dictionary,jQueryApi.EffectDuration)">
            <summary>
            Animates a set of CSS properties over the specified duration.
            </summary>
            <param name="propertiesToAnimate">The properties to animate with their target values.</param>
            <param name="duration">The duration in milliseconds for the animation.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Animate(System.Collections.Dictionary,jQueryApi.EffectDuration,jQueryApi.EffectEasing)">
            <summary>
            Animates a set of CSS properties over the specified duration.
            </summary>
            <param name="propertiesToAnimate">The properties to animate with their target values.</param>
            <param name="duration">The duration in milliseconds for the animation.</param>
            <param name="easing">The easing to apply to the animation.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Animate(System.Collections.Dictionary,jQueryApi.EffectDuration,jQueryApi.EffectEasing,System.Action)">
            <summary>
            Animates a set of CSS properties over the specified duration.
            </summary>
            <param name="propertiesToAnimate">The properties to animate with their target values.</param>
            <param name="duration">The duration in milliseconds for the animation.</param>
            <param name="easing">The easing to apply to the animation.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Animate(System.Collections.Dictionary,System.Collections.Dictionary)">
            <summary>
            Animates a set of CSS properties using the specified options.
            </summary>
            <param name="propertiesToAnimate">The properties to animate with their target values.</param>
            <param name="options">Animation options.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Append(System.String)">
            <summary>
            Insert content to the end of each element of the matching elements.
            </summary>
            <param name="content">The content to append.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Append(System.Html.Element)">
            <summary>
            Insert content to the end of each element of the matching elements.
            </summary>
            <param name="content">The DOM element to append.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Append(jQueryApi.jQueryObject)">
            <summary>
            Insert content to the end of each element of the matching elements.
            </summary>
            <param name="content">The jQueryObject containing the content.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Append(jQueryApi.StringFunction)">
            <summary>
            Insert content returned from the specified function to end end of each element
            of the matching elements.
            </summary>
            <param name="contentFunction">The function that returns the content to append.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Append(jQueryApi.StringReplaceFunction)">
            <summary>
            Insert content returned from the specified function to end end of each element
            of the matching elements.
            </summary>
            <param name="contentFunction">The function that returns the content to append.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.AppendTo(System.Html.Element)">
            <summary>
            Appends every element of the matching set to the end of the specified element.
            </summary>
            <param name="element">The element to append to.</param>
            <returns>The resulting jQuery object</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.AppendTo(System.String)">
            <summary>
            Appends every element of the matching set to the end of the elements matching
            the specified selector.
            </summary>
            <param name="selector">The elements to append to.</param>
            <returns>The resulting jQuery object</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.AppendTo(jQueryApi.jQueryObject)">
            <summary>
            Appends every element of the matching set to the end of the specified matched elements.
            </summary>
            <param name="jQueryObject">The elements to append to.</param>
            <returns>The resulting jQuery object</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Attribute(System.String,System.String)">
            <summary>
            Sets the specified attribute value to the specified value on
            the set of matched elements.
            </summary>
            <param name="attributeName">The name of the attribute to set.</param>
            <param name="value">The value of the attribute.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Attribute(System.Collections.Dictionary)">
            <summary>
            Sets the specified attributes to the set of matched elements.
            </summary>
            <param name="nameValueMap">The list of names and values of the attributes to set.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Attribute(jQueryApi.StringFunction)">
            <summary>
            Sets the specified attributes to the value returned from the specified function.
            </summary>
            <param name="attrFunction">The function returning the attribute values.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Attribute(jQueryApi.StringReplaceFunction)">
            <summary>
            Sets the specified attributes to the value returned from the specified function.
            </summary>
            <param name="attrFunction">The function returning the attribute values.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Before(System.String)">
            <summary>
            Insert content before each element of the matching elements.
            </summary>
            <param name="content">The content to insert.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Before(System.Html.Element)">
            <summary>
            Insert content before each element of the matching elements.
            </summary>
            <param name="content">The DOM element to insert.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Before(jQueryApi.jQueryObject)">
            <summary>
            Insert content before each element of the matching elements.
            </summary>
            <param name="content">The jQueryObject containing the content.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Before(jQueryApi.StringFunction)">
            <summary>
            Insert content returned from the specified function before each element
            of the matching elements.
            </summary>
            <param name="contentFunction">The function that returns the content to insert.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Bind(System.String,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler for handling the specified event on the matched set of elements.
            </summary>
            <param name="eventName">The name of the event.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Bind(System.String,System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler for the specified event on the matched set of elements.
            </summary>
            <param name="eventName">The name of the event.</param>
            <param name="eventData">Any data that needs to be passed to the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Bind(System.String,System.Boolean)">
            <summary>
            Attaches a handler that prevents default behavior and stops event bubbling for
            the specified event on the matched set of elements.
            </summary>
            <param name="eventName">The name of the event.</param>
            <param name="result">Should be false.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Blur">
            <summary>
            Triggers the blur event on each of the matched set of elements.
            </summary>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Blur(jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the blur event on each of the matched set of elements.
            </summary>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Blur(System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the blur event on each of the matched set of elements.
            </summary>
            <param name="eventData">Data to be passed in into the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Change">
            <summary>
            Triggers the change event on each of the matched set of elements.
            </summary>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Change(jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the change event on each of the matched set of elements.
            </summary>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Change(System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the change event on each of the matched set of elements.
            </summary>
            <param name="eventData">Data to be passed in into the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Children">
            <summary>
            Gets a jQueryObject representing the children of the matched set of elements.
            </summary>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Children(System.String)">
            <summary>
            Gets a jQueryObject representing the children of the matched set of elements.
            </summary>
            <param name="selector">The selector to match children against.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Click">
            <summary>
            Triggers the click event on each of the matched set of elements.
            </summary>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Click(jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the click event on each of the matched set of elements.
            </summary>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Click(System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the click event on each of the matched set of elements.
            </summary>
            <param name="eventData">Data to be passed in into the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Clone">
            <summary>
            Creates a clone of the current jQueryObject and the matching elements it
            represents.
            </summary>
            <returns>The cloned jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Clone(System.Boolean)">
            <summary>
            Creates a clone of the current jQueryObject and the matching elements it
            represents.
            </summary>
            <param name="withDataAndEvents">Whether event handlers and element data should be copied over.</param>
            <returns>The cloned jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Clone(System.Boolean,System.Boolean)">
            <summary>
            Creates a clone of the current jQueryObject and the matching elements it
            represents.
            </summary>
            <param name="withDataAndEvents">Whether event handlers and element data should be copied over.</param>
            <param name="deepWithDataAndEvents">Whether event handlers and element data for all children should be copied over.</param>
            <returns>The cloned jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Closest(System.Html.Element)">
            <summary>
            Returns a new jQueryObject with the closest ancestor matching
            the specified element.
            </summary>
            <param name="element">The element to match against.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Closest(jQueryApi.jQueryObject)">
            <summary>
            Returns a new jQueryObject with the closest ancestor matching
            the specified set of elements.
            </summary>
            <param name="elements">The matched set of elements to lookup.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Closest(System.String)">
            <summary>
            Returns a new jQueryObject with the closest ancestor matching
            the specified selector.
            </summary>
            <param name="selector">The selector used to match elements.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Closest(System.String,System.Html.Element)">
            <summary>
            Returns a new jQueryObject with the closest ancestor matching
            the specified selector.
            </summary>
            <param name="selector">The selector used to match elements.</param>
            <param name="context">The element within which to search.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Contents">
            <summary>
            Gets a jQueryObject representing the content of the matched set of elements
            including text nodes.
            </summary>
            <returns>The new jQueryObject with added elements.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.CSS(System.String,System.String)">
            <summary>
            Sets the specified CSS attribute value to the specified value on
            the set of matched elements.
            </summary>
            <param name="attributeName">The name of the CSS attribute to set.</param>
            <param name="value">The value of the CSS attribute.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.CSS(System.String,jQueryApi.StringFunction)">
            <summary>
            Sets the specified CSS attribute value to the values returned by the
            specified function on the set of matched elements.
            </summary>
            <param name="attributeName">The name of the CSS attribute to set.</param>
            <param name="valueFunction">The function returning attribute values.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.CSS(System.String,jQueryApi.StringReplaceFunction)">
            <summary>
            Sets the specified CSS attribute value to the values returned by the
            specified function on the set of matched elements.
            </summary>
            <param name="attributeName">The name of the CSS attribute to set.</param>
            <param name="valueFunction">The function returning attribute values.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.CSS(System.Collections.Dictionary)">
            <summary>
            Sets the specified CSS attributes to the set of matched elements.
            </summary>
            <param name="nameValueMap">The list of names and values of the CSS attributes to set.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Data(System.String,System.Object)">
            <summary>
            Sets the specified value as data on the matching set of elements.
            </summary>
            <param name="key">The key used to store value.</param>
            <param name="value">The value to store.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Data(System.Collections.Dictionary)">
            <summary>
            Sets the specified name/value pairs as data on the matching set of elements.
            This extends any existing data on the element.
            </summary>
            <param name="data">The set of name/value pairs to set.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Delegate(System.String,System.String,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler for handling the specified event on elements matching the
            specified selector within the matched set of elements, now or in the future.
            </summary>
            <param name="selector">The selector to match elements.</param>
            <param name="eventName">The name of the event.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns></returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Delegate(System.String,System.String,System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler for handling the specified event on elements matching the
            specified selector within the matched set of elements, now or in the future.
            </summary>
            <param name="selector">The selector to match elements.</param>
            <param name="eventName">The name of the event.</param>
            <param name="eventData">Any data that needs to be passed to the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns></returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Detach">
            <summary>
            Removes the matching elements from the DOM, but keeps jQuery data on elements
            intact.
            </summary>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Detach(System.String)">
            <summary>
            Removes the matching elements from the DOM, but keeps jQuery data on elements
            intact.
            </summary>
            <param name="selector">The selector to use to filter the elements to remove.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.DoubleClick">
            <summary>
            Triggers the dblclick event on each of the matched set of elements.
            </summary>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.DoubleClick(jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the dblclick event on each of the matched set of elements.
            </summary>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.DoubleClick(System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the dblclick event on each of the matched set of elements.
            </summary>
            <param name="eventData">Data to be passed in into the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Die">
            <summary>
            Detaches all handlers attached using Live from the matched set of elements.
            </summary>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Die(System.String)">
            <summary>
            Detaches all handlers attached using Live for the specified event on the
            matched set of elements.
            </summary>
            <param name="eventName">The event to detach handlers for.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Die(System.String,jQueryApi.jQueryEventHandler)">
            <summary>
            Detaches the specified handler attached using Live for the specified event on the
            matched set of elements.
            </summary>
            <param name="eventName">The name of the event.</param>
            <param name="eventHandler">The event handler to be detached.</param>
            <returns></returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Each(jQueryApi.ElementIterationCallback)">
            <summary>
            Execute a function within for every matched element.
            part way through.
            </summary>
            <param name="callback">The callback to call.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Each(jQueryApi.ElementInterruptibleIterationCallback)">
            <summary>
            Execute a function within for every matched element. If the callback
            returns false, the iteration is interrupted.
            </summary>
            <param name="callback">The callback to call.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Empty">
            <summary>
            Removes all child elements of the matching set of elements.
            </summary>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.End">
            <summary>
            Add the most recent filtering operation and return the previous set of
            matching elements.
            </summary>
            <returns>The jQueryObject containing the previous element set.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Eq(System.Int32)">
            <summary>
            Reduce the set of matched elements to a single element.
            </summary>
            <param name="index">The index of the element. Use negative to count backwards.</param>
            <returns>A new jQueryObject wrapping the specified element.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Error">
            <summary>
            Triggers the error event on each of the matched set of elements.
            </summary>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Error(jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the error event on each of the matched set of elements.
            </summary>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Error(System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the error event on each of the matched set of elements.
            </summary>
            <param name="eventData">Data to be passed in into the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FadeIn">
            <summary>
            Fades in the matching set of elements using a default duration of 400ms.
            </summary>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FadeIn(System.Int32)">
            <summary>
            Fades in the matching set of elements using a the specified duration.
            </summary>
            <param name="duration">The duration in milliseconds for the effect.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FadeIn(System.Int32,System.Action)">
            <summary>
            Fades in the matching set of elements using a the specified duration.
            </summary>
            <param name="duration">The duration in milliseconds for the effect.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FadeIn(System.Int32,jQueryApi.EffectEasing,System.Action)">
            <summary>
            Fades in the matching set of elements using a the specified duration.
            </summary>
            <param name="duration">The duration in milliseconds for the effect.</param>
            <param name="easing">The easing to use.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FadeIn(jQueryApi.EffectDuration)">
            <summary>
            Fades in the matching set of elements using a the specified duration.
            </summary>
            <param name="duration">The duration for the effect.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FadeIn(jQueryApi.EffectDuration,System.Action)">
            <summary>
            Fades in the matching set of elements using a the specified duration.
            </summary>
            <param name="duration">The duration for the effect.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FadeIn(jQueryApi.EffectDuration,jQueryApi.EffectEasing,System.Action)">
            <summary>
            Fades in the matching set of elements using a the specified duration.
            </summary>
            <param name="duration">The duration for the effect.</param>
            <param name="easing">The easing to use.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FadeOut">
            <summary>
            Fades out the matching set of elements using a default duration of 400ms.
            </summary>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FadeOut(System.Int32)">
            <summary>
            Fades out the matching set of elements using a the specified duration.
            </summary>
            <param name="duration">The duration in milliseconds for the effect.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FadeOut(System.Int32,System.Action)">
            <summary>
            Fades out the matching set of elements using a the specified duration.
            </summary>
            <param name="duration">The duration in milliseconds for the effect.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FadeOut(System.Int32,jQueryApi.EffectEasing,System.Action)">
            <summary>
            Fades out the matching set of elements using a the specified duration.
            </summary>
            <param name="duration">The duration in milliseconds for the effect.</param>
            <param name="easing">The easing to use.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FadeOut(jQueryApi.EffectDuration)">
            <summary>
            Fades out the matching set of elements using a the specified duration.
            </summary>
            <param name="duration">The duration for the effect.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FadeOut(jQueryApi.EffectDuration,System.Action)">
            <summary>
            Fades out the matching set of elements using a the specified duration.
            </summary>
            <param name="duration">The duration for the effect.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FadeOut(jQueryApi.EffectDuration,jQueryApi.EffectEasing,System.Action)">
            <summary>
            Fades out the matching set of elements using a the specified duration.
            </summary>
            <param name="duration">The duration for the effect.</param>
            <param name="easing">The easing to use.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FadeTo(System.Int32,System.Double)">
            <summary>
            Fades the matching set of elements using a the specified duration to the
            specified opacity.
            </summary>
            <param name="duration">The duration in milliseconds for the effect.</param>
            <param name="opacity">The opacity level between 0 and 1.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FadeTo(System.Int32,System.Double,System.Action)">
            <summary>
            Fades the matching set of elements using a the specified duration to
            the specified opacity.
            </summary>
            <param name="duration">The duration in milliseconds for the effect.</param>
            <param name="opacity">The opacity level between 0 and 1.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FadeTo(System.Int32,System.Double,jQueryApi.EffectEasing,System.Action)">
            <summary>
            Fades the matching set of elements using a the specified duration to
            the specified opacity.
            </summary>
            <param name="duration">The duration in milliseconds for the effect.</param>
            <param name="opacity">The opacity level between 0 and 1.</param>
            <param name="easing">The easing to use.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FadeTo(jQueryApi.EffectDuration,System.Double)">
            <summary>
            Fades the matching set of elements using a the specified duration to the
            specified opacity.
            </summary>
            <param name="duration">The duration for the effect.</param>
            <param name="opacity">The opacity level between 0 and 1.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FadeTo(jQueryApi.EffectDuration,System.Double,System.Action)">
            <summary>
            Fades the matching set of elements using a the specified duration to
            the specified opacity.
            </summary>
            <param name="duration">The duration for the effect.</param>
            <param name="opacity">The opacity level between 0 and 1.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FadeTo(jQueryApi.EffectDuration,System.Double,jQueryApi.EffectEasing,System.Action)">
            <summary>
            Fades the matching set of elements using a the specified duration to
            the specified opacity.
            </summary>
            <param name="duration">The duration for the effect.</param>
            <param name="opacity">The opacity level between 0 and 1.</param>
            <param name="easing">The easing to use.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FadeToggle">
            <summary>
            Toggles the visibility of the matching set of elements by fading them
            using a default duration of 400ms.
            </summary>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FadeToggle(System.Int32)">
            <summary>
            Toggles the visibility of the matching set of elements by fading them
            using the specified duration.
            </summary>
            <param name="duration">The duration in milliseconds for the effect.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FadeToggle(System.Int32,System.Action)">
            <summary>
            Toggles the visibility of the matching set of elements by fading them
            using the specified duration.
            </summary>
            <param name="duration">The duration in milliseconds for the effect.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FadeToggle(System.Int32,jQueryApi.EffectEasing,System.Action)">
            <summary>
            Toggles the visibility of the matching set of elements by fading them
            using the specified duration.
            </summary>
            <param name="duration">The duration in milliseconds for the effect.</param>
            <param name="easing">The easing to use.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FadeToggle(jQueryApi.EffectDuration)">
            <summary>
            Toggles the visibility of the matching set of elements by fading them
            using the specified duration.
            </summary>
            <param name="duration">The duration for the effect.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FadeToggle(jQueryApi.EffectDuration,System.Action)">
            <summary>
            Toggles the visibility of the matching set of elements by fading them
            using the specified duration.
            </summary>
            <param name="duration">The duration for the effect.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Filter(System.String)">
            <summary>
            Returns a new jQueryObject with elements matching the specified selector.
            </summary>
            <param name="selector">The selector used to match elements.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Filter(jQueryApi.ElementFilterCallback)">
            <summary>
            Returns a new jQueryObject with elements for which the specified filter
            function return true.
            </summary>
            <param name="filterFunction">The function used to filter elements.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Find(System.Html.Element)">
            <summary>
            Returns a new jQueryObject with descendents of each matched element filtered
            by the specified element.
            This traverses down multiple levels of the tree.
            </summary>
            <param name="element">The element to match against.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Find(jQueryApi.jQueryObject)">
            <summary>
            Returns a new jQueryObject with descendents of each matched element filtered
            by the specified matched set of elements.
            This traverses down multiple levels of the tree.
            </summary>
            <param name="elements">The matched set of elements to lookup.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Find(System.String)">
            <summary>
            Returns a new jQueryObject with descendents of each matched element filtered
            by the specified selector. This traverses down multiple levels of the tree.
            </summary>
            <param name="selector">The selector used to match elements.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.First">
            <summary>
            Returns a new jQueryObject with the first matching element.
            </summary>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Focus">
            <summary>
            Triggers the focus event on each of the matched set of elements.
            </summary>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Focus(jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the focus event on each of the matched set of elements.
            </summary>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Focus(System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the focus event on each of the matched set of elements.
            </summary>
            <param name="eventData">Data to be passed in into the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FocusIn(jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the focusin event on each of the matched set of elements.
            </summary>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FocusIn(System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the focusin event on each of the matched set of elements.
            </summary>
            <param name="eventData">Data to be passed in into the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FocusOut(jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the focusout event on each of the matched set of elements.
            </summary>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.FocusOut(System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the focusout event on each of the matched set of elements.
            </summary>
            <param name="eventData">Data to be passed in into the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.GetAttribute(System.String)">
            <summary>
            Gets the value of the specified attribute.
            </summary>
            <param name="attributeName">The name of the attribute.</param>
            <returns>The value of the specified attribute.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.GetCSS(System.String)">
            <summary>
            Gets the value of the specified CSS attribute.
            </summary>
            <param name="attributeName">The name of the attribute.</param>
            <returns>The value of the specified CSS attribute.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.GetData">
            <summary>
            Retrieves all data values associated with the element.
            </summary>
            <returns>All the data as name/value pairs.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.GetDataValue(System.String)">
            <summary>
            Retrieves the specific data value associated with the element.
            </summary>
            <param name="key">The key to lookup.</param>
            <returns>The value set for the specified key.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.GetElement(System.Int32)">
            <summary>
            Returns the wrapped element at the specified index.
            </summary>
            <param name="index">The index to lookup.</param>
            <returns>The element being wrapped.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.GetElements">
            <summary>
            Returns the wrapped elements.
            </summary>
            <returns>An array containing the elements being wrapped.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.GetHeight">
            <summary>
            Gets the height of the first matched element.
            </summary>
            <returns>The current computed height of the element.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.GetHtml">
            <summary>
            Gets the HTML content of the first matched element.
            </summary>
            <returns>The HTML content within the element.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.GetInnerHeight">
            <summary>
            Gets the height of the first matched element excluding borders.
            </summary>
            <returns>The current computed height of the element.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.GetInnerWidth">
            <summary>
            Gets the width of the first matched element excluding borders.
            </summary>
            <returns>The current computed width of the element.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.GetItem(System.Int32)">
            <summary>
            Returns the wrapped items at the specified index.
            </summary>
            <param name="index">The index to lookup.</param>
            <returns>The item being wrapped.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.GetItems">
            <summary>
            Returns the wrapped items.
            </summary>
            <returns>An array containing the items being wrapped.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.GetOffset">
            <summary>
            Gets the position of the first matched element relative to the document.
            </summary>
            <returns>The position of the element.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.GetOuterHeight">
            <summary>
            Gets the height of the first matched element including borders.
            </summary>
            <returns>The current computed height of the element.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.GetOuterHeight(System.Boolean)">
            <summary>
            Gets the height of the first matched element including borders.
            </summary>
            <param name="includeMargins">Whether to include the margins.</param>
            <returns>The current computed height of the element.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.GetOuterWidth">
            <summary>
            Gets the width of the first matched element including borders.
            </summary>
            <returns>The current computed width of the element.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.GetOuterWidth(System.Boolean)">
            <summary>
            Gets the width of the first matched element including borders.
            </summary>
            <param name="includeMargins">Whether to include the margins.</param>
            <returns>The current computed width of the element.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.GetProperty(System.String)">
            <summary>
            Gets the value of the specified property from the first of the matched
            set of elements.
            </summary>
            <param name="propertyName">The name of the property.</param>
            <returns>The value of the specified property.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.GetProperty``1(System.String)">
            <summary>
            Gets the value of the specified property from the first of the matched
            set of elements.
            </summary>
            <param name="propertyName">The name of the property.</param>
            <returns>The value of the specified property.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.GetScrollLeft">
            <summary>
            Gets the current horizontal scrollbar position of the first matched element.
            </summary>
            <returns>The horizontal scroll position of the element.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.GetScrollTop">
            <summary>
            Gets the current vertical scrollbar position of the first matched element.
            </summary>
            <returns>The vertical scroll position of the element.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.GetText">
            <summary>
            Gets the text content of the first matched element.
            </summary>
            <returns>The text content within the element.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.GetValue">
            <summary>
            Gets the value attribute of the first matched element.
            </summary>
            <returns>The value attribute of the element.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.GetWidth">
            <summary>
            Gets the width of the first matched element.
            </summary>
            <returns>The current computed width of the element.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Has(System.String)">
            <summary>
            Returns a new jQueryObject with elements that have a descendant matching
            the specified selector.
            </summary>
            <param name="selector">The selector used to match elements.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Has(System.Html.Element)">
            <summary>
            Returns a new jQueryObject with elements that have the specified element
            as a descendant.
            </summary>
            <param name="element">The element to check for.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.HasClass(System.String)">
            <summary>
            Determine whether any of the matched elements are assigned the given class.
            </summary>
            <param name="className">The class name to search for.</param>
            <returns>true if the class name is found; false otherwise.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Height(System.Int32)">
            <summary>
            Sets the height of each of the matched elements.
            </summary>
            <param name="height">Thew new height.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Height(System.String)">
            <summary>
            Sets the height of each of the matched elements.
            </summary>
            <param name="height">Thew new height.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Hide">
            <summary>
            Hide the matched set of elements.
            </summary>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Hide(System.Int32)">
            <summary>
            Hide the matched set of elements in an animated manner.
            </summary>
            <param name="duration">The duration in milliseconds of the animation.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Hide(System.Int32,System.Action)">
            <summary>
            Hide the matched set of elements in an animated manner.
            </summary>
            <param name="duration">The duration in milliseconds of the animation.</param>
            <param name="callback">The callback to invoke once the animation is completed.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Hide(System.Int32,jQueryApi.EffectEasing,System.Action)">
            <summary>
            Hide the matched set of elements in an animated manner.
            </summary>
            <param name="duration">The duration in milliseconds of the animation.</param>
            <param name="easing">The easing to use.</param>
            <param name="callback">The callback to invoke once the animation is completed.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Hide(jQueryApi.EffectDuration)">
            <summary>
            Hide the matched set of elements in an animated manner.
            </summary>
            <param name="duration">The duration of the animation.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Hide(jQueryApi.EffectDuration,System.Action)">
            <summary>
            Hide the matched set of elements in an animated manner.
            </summary>
            <param name="duration">The duration of the animation.</param>
            <param name="callback">The callback to invoke once the animation is completed.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Hide(jQueryApi.EffectDuration,jQueryApi.EffectEasing,System.Action)">
            <summary>
            Hide the matched set of elements in an animated manner.
            </summary>
            <param name="duration">The duration of the animation.</param>
            <param name="easing">The easing to use.</param>
            <param name="callback">The callback to invoke once the animation is completed.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Html(System.String)">
            <summary>
            Sets the HTML content of the matched set of elements.
            </summary>
            <param name="html">The new HTML to set.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Html(jQueryApi.jQueryObject)">
            <summary>
            Sets the HTML content of the matched set of elements to the markup represented
            by the specified element.
            </summary>
            <param name="html">The new HTML to set.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Html(jQueryApi.StringFunction)">
            <summary>
            Sets the HTML content of the matched set of elements by calling the specified
            function.
            </summary>
            <param name="htmlFunction">The function that returns the HTML content.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Html(jQueryApi.StringReplaceFunction)">
            <summary>
            Sets the HTML content of the matched set of elements by calling the specified
            function.
            </summary>
            <param name="htmlFunction">The function that returns the HTML content.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Index">
            <summary>
            Gets the index of the first element in the matched set of elements relative to
            its sibling elements.
            </summary>
            <returns>The index of the first matching element.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Index(System.Html.Element)">
            <summary>
            Searches every matched element for the object and returns its 0-based index if found.
            Returns -1 if the object wasn't found.
            </summary>
            <param name="element">The element to lookup.</param>
            <returns>The index of the elment.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Index(System.String)">
            <summary>
            Gets the index of the first element in the matched set of elements relative to
            the set of elements matching the specified selector.
            </summary>
            <param name="selector">The selector used to match elements.</param>
            <returns>The index of the first matching element.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.InsertAfter(System.Html.Element)">
            <summary>
            Insert every element of the matching set after the specified element.
            </summary>
            <param name="element">The element to insert after.</param>
            <returns>The resulting jQuery object</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.InsertAfter(System.String)">
            <summary>
            Insert every element of the matching set after the elements matching
            the specified selector.
            </summary>
            <param name="selector">The elements to insert after.</param>
            <returns>The resulting jQuery object</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.InsertAfter(jQueryApi.jQueryObject)">
            <summary>
            Insert every element of the matching set after the specified matched elements.
            </summary>
            <param name="jQueryObject">The elements to insert after.</param>
            <returns>The resulting jQuery object</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.InsertBefore(System.Html.Element)">
            <summary>
            Insert every element of the matching set before the specified element.
            </summary>
            <param name="element">The element to insert before.</param>
            <returns>The resulting jQuery object</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.InsertBefore(System.String)">
            <summary>
            Insert every element of the matching set before the elements matching
            the specified selector.
            </summary>
            <param name="selector">The elements to insert before.</param>
            <returns>The resulting jQuery object</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.InsertBefore(jQueryApi.jQueryObject)">
            <summary>
            Insert every element of the matching set before the specified matched elements.
            </summary>
            <param name="jQueryObject">The elements to insert before.</param>
            <returns>The resulting jQuery object</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Is(jQueryApi.BooleanFunction)">
            <summary>
            Gets whether the at least one of the matched set of elements matches the specified
            filter function.
            </summary>
            <param name="filter">The filter function to invoke for each element.</param>
            <returns>True if there is a matching element; false otherwise.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Is(System.Html.Element)">
            <summary>
            Gets whether the at least one of the matched set of elements matches the specified
            element.
            </summary>
            <param name="element">The element to compare against.</param>
            <returns>True if there is a matching element; false otherwise.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Is(jQueryApi.jQueryObject)">
            <summary>
            Gets whether the at least one of the matched set of elements matches the specified
            matched set of elements.
            </summary>
            <param name="elements">The matched set of elements to compare against.</param>
            <returns>True if there is a matching element; false otherwise.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Is(System.String)">
            <summary>
            Gets whether the at least one of the matched set of elements matches the specified
            selector.
            </summary>
            <param name="selector">The selector to check for.</param>
            <returns>True if there is a matching element; false otherwise.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Keydown">
            <summary>
            Triggers the keydown event on each of the matched set of elements.
            </summary>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Keydown(jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the keydown event on each of the matched set of elements.
            </summary>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Keydown(System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the keydown event on each of the matched set of elements.
            </summary>
            <param name="eventData">Data to be passed in into the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Keypress">
            <summary>
            Triggers the keypress event on each of the matched set of elements.
            </summary>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Keypress(jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the keypress event on each of the matched set of elements.
            </summary>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Keypress(System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the keypress event on each of the matched set of elements.
            </summary>
            <param name="eventData">Data to be passed in into the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Keyup">
            <summary>
            Triggers the keyup event on each of the matched set of elements.
            </summary>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Keyup(jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the keyup event on each of the matched set of elements.
            </summary>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Keyup(System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the keyup event on each of the matched set of elements.
            </summary>
            <param name="eventData">Data to be passed in into the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Last">
            <summary>
            Returns a new jQueryObject with the last matching element.
            </summary>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Live(System.String,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler for handling the specified event on the matched set of elements,
            as well as other elements matching the current selector in the future.
            </summary>
            <param name="eventName">The name of the event.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns></returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Live(System.String,System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler for the specified event on the matched set of elements,
            as well as other elements matching the current selector in the future.
            </summary>
            <param name="eventName">The name of the event.</param>
            <param name="eventData">Any data that needs to be passed to the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns></returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Load(jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the load event on each of the matched set of elements.
            </summary>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Load(System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the load event on each of the matched set of elements.
            </summary>
            <param name="eventData">Data to be passed in into the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Load(System.String)">
            <summary>
            Load data from the specified URL and place the returned HTML into the matched
            elements.
            </summary>
            <param name="url">The URL to request.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Load(System.String,System.Object)">
            <summary>
            Load data from the specified URL and place the returned HTML into the matched
            elements.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="data">The data to send with the request.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Load(System.String,System.Object,jQueryApi.AjaxCallback{System.Object})">
            <summary>
            Load data from the specified URL and place the returned HTML into the matched
            elements.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="data">The data to send with the request.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Load(System.String,System.Object,jQueryApi.AjaxRequestCallback{System.Object})">
            <summary>
            Load data from the specified URL and place the returned HTML into the matched
            elements.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="data">The data to send with the request.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Map(jQueryApi.ElementMapCallback)">
            <summary>
            Maps each element of the matching set using the specified callback.
            </summary>
            <param name="callback">The callback that performs the mapping.</param>
            <returns>A new jQueryObject containing the mapped results.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.MouseDown(jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the mousedown event on each of the matched set of elements.
            </summary>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.MouseDown(System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the mousedown event on each of the matched set of elements.
            </summary>
            <param name="eventData">Data to be passed in into the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.MouseEnter(jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the mouseenter event on each of the matched set of elements.
            </summary>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.MouseEnter(System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the mouseenter event on each of the matched set of elements.
            </summary>
            <param name="eventData">Data to be passed in into the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.MouseLeave(jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the mouseleave event on each of the matched set of elements.
            </summary>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.MouseLeave(System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the mouseleave event on each of the matched set of elements.
            </summary>
            <param name="eventData">Data to be passed in into the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.MouseMove(jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the mousemove event on each of the matched set of elements.
            </summary>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.MouseMove(System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the mousemove event on each of the matched set of elements.
            </summary>
            <param name="eventData">Data to be passed in into the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.MouseOut(jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the mouseout event on each of the matched set of elements.
            </summary>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.MouseOut(System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the mouseout event on each of the matched set of elements.
            </summary>
            <param name="eventData">Data to be passed in into the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.MouseOver(jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the mouseover event on each of the matched set of elements.
            </summary>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.MouseOver(System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the mouseover event on each of the matched set of elements.
            </summary>
            <param name="eventData">Data to be passed in into the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.MouseUp(jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the mouseup event on each of the matched set of elements.
            </summary>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.MouseUp(System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the mouseup event on each of the matched set of elements.
            </summary>
            <param name="eventData">Data to be passed in into the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Next">
            <summary>
            Gets a jQueryObject representing the immediate following sibling
            element of the matched set of elements.
            </summary>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Next(System.String)">
            <summary>
            Gets a jQueryObject representing the immediate following sibling
            element of the matched set of elements filtered by the specified selector.
            </summary>
            <param name="selector">The selector to match children against.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.NextAll">
            <summary>
            Gets a jQueryObject representing all the following sibling elements
            of the matched set of elements.
            </summary>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.NextAll(System.String)">
            <summary>
            Gets a jQueryObject representing all the following sibling elements
            of the matched set of elements filtered by the specified selector.
            </summary>
            <param name="selector">The selector to match children against.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.NextUntil(System.String)">
            <summary>
            Gets a jQueryObject representing all the following sibling elements
            of the matched set of elements while they match the specified selector.
            </summary>
            <param name="selector">The selector to match children against.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Not(System.Html.Element)">
            <summary>
            Returns a new jQueryObject with the specified element removed from the
            current set of matching elements.
            </summary>
            <param name="element">The element to remove.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Not(System.Html.Element[])">
            <summary>
            Returns a new jQueryObject with the specified elements removed from the
            current set of matching elements.
            </summary>
            <param name="elements">The element to remove.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Not(System.String)">
            <summary>
            Returns a new jQueryObject with elements matching the specified selector
            removed from the current set of matching elements.
            </summary>
            <param name="selector">The selector used to match elements to remove.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Not(jQueryApi.ElementFilterCallback)">
            <summary>
            Returns a new jQueryObject with elements for which the specified filter
            function return true removed from the matching set of elements.
            </summary>
            <param name="filterFunction">The function used to filter elements to remove.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Off(System.Collections.Dictionary)">
            <summary>
            Removes an event handler which has been created by called On()
            </summary>
            <param name="eventsMap">A dictionary in which the string keys represent the event names, and the values represent the handler which was previously attached to that event</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Off(System.Collections.Dictionary,System.String)">
            <summary>
            Removes an event handler which has been created by called On()
            </summary>
            <param name="eventsMap">A dictionary in which the string keys represent the event names, and the values represent the handler which was previously attached to that event</param>
            <param name="selector">A selector which should match the one originally passed to On()</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Off(System.String)">
            <summary>
            Removes an event handler which has been created by called On()
            </summary>
            <param name="events">One or more space-separated event types and optional namespaces</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Off(System.String,System.String)">
            <summary>
            Removes an event handler which has been created by called On()
            </summary>
            <param name="events">One or more space-separated event types and optional namespaces</param>
            <param name="selector">A selector which should match the one originally passed to On()</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Off(System.String,System.String,jQueryApi.jQueryEventHandler)">
            <summary>
            Removes an event handler which has been created by called On()
            </summary>
            <param name="events">One or more space-separated event types and optional namespaces</param>
            <param name="selector">A selector which should match the one originally passed to On()</param>
            <param name="eventHandler">A handler function previously attached for the event(s)</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Offset(jQueryApi.jQueryPosition)">
            <summary>
            Sets the position of the matched elements relative to the document.
            </summary>
            <param name="position">The coordinates to position the elements at.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Offset(jQueryApi.PositionFunction)">
            <summary>
            Sets the position of the matched elements relative to the document using values
            returned from the specified function.
            </summary>
            <param name="positionFunction">The function returning the position for an element.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Offset(jQueryApi.PositionReplaceFunction)">
            <summary>
            Sets the position of the matched elements relative to the document using values
            returned from the specified function.
            </summary>
            <param name="positionFunction">The function returning the position for an element.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.OffsetParent">
            <summary>
            Gets a new jQueryObject containing the closest ancestor element that is positioned.
            </summary>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.On(System.String,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches an event handler function for one or more events to the selected elements.
            </summary>
            <param name="eventName">The name of the event</param>
            <param name="eventHandler">The event handler to be invoked</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.On(System.String,System.String,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches an event handler function for one or more events to the selected elements.
            </summary>
            <param name="eventName">The name of the event</param>
            <param name="selector">A selector string to filter the descendants of the selected elements that trigger the event.</param>
            <param name="eventHandler">The event handler to be invoked</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.On(System.String,System.String,System.Object,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches an event handler function for one or more events to the selected elements.
            </summary>
            <param name="eventName">The name of the event</param>
            <param name="selector">A selector string to filter the descendants of the selected elements that trigger the event.</param>
            <param name="data">A custom data structure to be passed to the handler</param>
            <param name="eventHandler">The event handler to be invoked</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.On(System.Collections.Dictionary)">
            <summary>
            Attaches an event handler function for one or more events to the selected elements.
            </summary>
            <param name="eventsMap">A dictionary in which the string keys represent the event names, and the values represent the handler for that event.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.On(System.Collections.Dictionary,System.String)">
            <summary>
            Attaches an event handler function for one or more events to the selected elements.
            </summary>
            <param name="eventsMap">A dictionary in which the string keys represent the event names, and the values represent the handler for that event.</param>
            <param name="selector">A selector string to filter the descendants of the selected elements that trigger the event.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.On(System.Collections.Dictionary,System.String,System.Object)">
            <summary>
            Attaches an event handler function for one or more events to the selected elements.
            </summary>
            <param name="eventsMap">A dictionary in which the string keys represent the event names, and the values represent the handler for that event.</param>
            <param name="selector">A selector string to filter the descendants of the selected elements that trigger the event.</param>
            <param name="data">A custom data structure to be passed to the handler</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.One(System.String,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler for the handling the specified event once on the matched
            set of elements.
            </summary>
            <param name="eventName">The name of the event.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns></returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.One(System.String,System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler for handling the specified event once on the matched set of elements.
            </summary>
            <param name="eventName">The name of the event.</param>
            <param name="eventData">Any data that needs to be passed to the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns></returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Parent">
            <summary>
            Gets a new jQueryObject containing the parents of each of the matched elements.
            </summary>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Parent(System.String)">
            <summary>
            Gets a new jQueryObject containing the parents of each of the matched elements,
            filtered by the specified selector.
            </summary>
            <param name="selector">The selector to match elements.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Parents">
            <summary>
            Gets a new jQueryObject containing the ancestors of each of the matched elements.
            </summary>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Parents(System.String)">
            <summary>
            Gets a new jQueryObject containing the ancestors of each of the matched elements,
            filtered by the specified selector.
            </summary>
            <param name="selector">The selector to match elements.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.ParentsUntil(System.String)">
            <summary>
            Gets a new jQueryObject containing the ancestors of each of the matched elements,
            up to but not including the element that matches the specified selector.
            </summary>
            <param name="selector">The selector to match elements.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Plugin``1">
            <summary>
            Casts this jQueryObject to a derived jQueryObject to enable using
            APIs defined on the jQuery object through an external jQuery plugin.
            </summary>
            <typeparam name="T">The type of jQueryObject that contains additional plugin APIs mixed in.</typeparam>
            <returns>The specified type of jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Position">
            <summary>
            Gets the position of the first matched element relative to the first offset parent.
            </summary>
            <returns>The position of the element.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Prepend(System.String)">
            <summary>
            Prepend content to the beginning of each element of the matching elements.
            </summary>
            <param name="content">The content to prepend.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Prepend(System.Html.Element)">
            <summary>
            Prepend content to the beginning of each element of the matching elements.
            </summary>
            <param name="content">The DOM element to prepend.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Prepend(System.Html.Element[])">
            <summary>
            Prepend content to the beginning of each element of the matching elements.
            </summary>
            <param name="content">The DOM elements to prepend.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Prepend(jQueryApi.jQueryObject)">
            <summary>
            Prepend content to the beginning of each element of the matching elements.
            </summary>
            <param name="content">The jQueryObject containing the content.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Prepend(jQueryApi.StringFunction)">
            <summary>
            Prepend content returned from the specified function to the beginning of each element
            of the matching elements.
            </summary>
            <param name="contentFunction">The function that returns the content to prepend.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Prepend(jQueryApi.StringReplaceFunction)">
            <summary>
            Prepend content returned from the specified function to the beginning of each element
            of the matching elements.
            </summary>
            <param name="contentFunction">The function that returns the content to prepend.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.PrependTo(System.String)">
            <summary>
            Prepends every element of the matching set to the beginning of each element of the matching elements.
            </summary>
            <param name="target">The target to prepend to.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.PrependTo(System.Html.Element)">
            <summary>
            Prepends every element of the matching set to the beginning of each element of the matching elements.
            </summary>
            <param name="target">The DOM element to prepend to.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.PrependTo(jQueryApi.jQueryObject)">
            <summary>
            Prepends every element of the matching set to the beginning of each element of the matching elements.
            </summary>
            <param name="target">The jQueryObject to prepend to.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Prev">
            <summary>
            Gets a jQueryObject representing the immediate preceeding sibling
            element of the matched set of elements.
            </summary>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Prev(System.String)">
            <summary>
            Gets a jQueryObject representing the immediate preceeding sibling
            element of the matched set of elements filtered by the specified selector.
            </summary>
            <param name="selector">The selector to match children against.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.PrevAll">
            <summary>
            Gets a jQueryObject representing all the preceeding sibling elements
            of the matched set of elements.
            </summary>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.PrevAll(System.String)">
            <summary>
            Gets a jQueryObject representing all the preceeding sibling elements
            of the matched set of elements filtered by the specified selector.
            </summary>
            <param name="selector">The selector to match children against.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.PrevUntil(System.String)">
            <summary>
            Gets a jQueryObject representing all the preceeding sibling elements
            of the matched set of elements while they match the specified selector.
            </summary>
            <param name="selector">The selector to match children against.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Promise">
            <summary>
            Creates a deferred object to observe when all animations are completed.
            </summary>
            <returns>A deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Promise(System.String)">
            <summary>
            Creates a deferred object to observe when all actions of the specified
            type are completed.
            </summary>
            <param name="type">The type of actions to observe.</param>
            <returns>A deferred object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Promise(System.String,System.Object)">
            <summary>
            Creates a deferred object to observe when all actions of the specified
            type are completed. The specified target object is modified to contain
            the deferred methods.
            </summary>
            <param name="type">The type of actions to observe.</param>
            <param name="target">The target object to modify.</param>
            <returns>The target object.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Property(System.String,System.Object)">
            <summary>
            Sets the value of the specified property to the specified value on
            the matched set of elements.
            </summary>
            <param name="propertyName">The name of the property.</param>
            <param name="value">The value to set the property to.</param>
            <returns>The value of the specified property.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Remove">
            <summary>
            Removes the matched elements from the DOM, and removes jQuery data from elements.
            </summary>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Remove(System.String)">
            <summary>
            Removes the matching elements from the DOM, and removes jQuery data from elements.
            </summary>
            <param name="selector">The selector to use to filter the elements to remove.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.RemoveAttr(System.String)">
            <summary>
            Removes the specified attribute from each of the set of matched elements.
            </summary>
            <param name="attributeName">The attribute to remove.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.RemoveClass">
            <summary>
            Removes all classes from each of the set of matched elements.
            </summary>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.RemoveClass(System.String)">
            <summary>
            Removes the CSS class returned by the specified function.
            </summary>
            <param name="className">The class or classes to remove.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.RemoveClass(jQueryApi.StringFunction)">
            <summary>
            Removes the class returned from the specified function for each of the set of matched elements.
            </summary>
            <param name="cssFunction">The function that returns the CSS class to remove.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.RemoveClass(jQueryApi.StringReplaceFunction)">
            <summary>
            Removes the class returned from the specified function for each of the set of matched elements.
            </summary>
            <param name="cssFunction">The function that returns the CSS class to remove.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.RemoveData">
            <summary>
            Removes all the data from the matching set of elements.
            </summary>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.RemoveData(System.String)">
            <summary>
            Removes the specified data from the matching set of elements.
            </summary>
            <param name="key">The name of the value to remove.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.RemoveProperty(System.String)">
            <summary>
            Removes the specified property from the matching set of elements.
            </summary>
            <param name="propertyName">The name of the property to remove.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.ReplaceAll(System.String)">
            <summary>
            Replace each element matching the specified selector with the set of matched elements.
            </summary>
            <param name="selector">The selector to match elements to be replaced.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.ReplaceWith(System.String)">
            <summary>
            Replace each element in the set of matched elements with the provided new content.
            </summary>
            <param name="content">The HTML to wrap with.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.ReplaceWith(System.Html.Element)">
            <summary>
            Replace each element in the set of matched elements with the new content provided
            by the specified element.
            </summary>
            <param name="content">The element containing the HTML to use.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.ReplaceWith(jQueryApi.jQueryObject)">
            <summary>
            Replace each element in the set of matched elements with the new content provided
            by the specified set of matched elements.
            </summary>
            <param name="content">The object containing the HTML to use.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.ReplaceWith(jQueryApi.StringFunction)">
            <summary>
            Replace each element in the set of matched elements with the content returned from
            the specified function.
            </summary>
            <param name="contetntFunction">The functio returning the HTML to replace with.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Resize(jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the resize event on each of the matched set of elements.
            </summary>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Resize(System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the resize event on each of the matched set of elements.
            </summary>
            <param name="eventData">Data to be passed in into the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Scroll(jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the scroll event on each of the matched set of elements.
            </summary>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Scroll(System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the scroll event on each of the matched set of elements.
            </summary>
            <param name="eventData">Data to be passed in into the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.ScrollLeft(System.Int32)">
            <summary>
            Sets the current horizontal scrollbar position of the matched elements.
            </summary>
            <param name="position">The horizontal scroll position.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.ScrollTop(System.Int32)">
            <summary>
            Sets the current vertical scrollbar position of the matched elements.
            </summary>
            <param name="position">The vertical scroll position.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Select">
            <summary>
            Triggers the select event on each of the matched set of elements.
            </summary>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Select(jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the select event on each of the matched set of elements.
            </summary>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Select(System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the select event on each of the matched set of elements.
            </summary>
            <param name="eventData">Data to be passed to the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Serialize">
            <summary>
            Serializes the name/value pairs for the matching set of form elements into
            a URL-encoded string suitable for posting/submitting.
            </summary>
            <returns>The serialized representation of form name/value pairs.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.SerializeArray">
            <summary>
            Serializes the name/value pairs for the matching set of form elements.
            </summary>
            <returns>The form name/value pairs.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Show">
            <summary>
            Show the matched set of elements.
            </summary>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Show(System.Int32)">
            <summary>
            Show the matched set of elements in an animated manner.
            </summary>
            <param name="duration">The duration in milliseconds of the animation.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Show(System.Int32,System.Action)">
            <summary>
            Show the matched set of elements in an animated manner.
            </summary>
            <param name="duration">The duration in milliseconds of the animation.</param>
            <param name="callback">The callback to invoke once the animation is completed.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Show(System.Int32,jQueryApi.EffectEasing,System.Action)">
            <summary>
            Show the matched set of elements in an animated manner.
            </summary>
            <param name="duration">The duration in milliseconds of the animation.</param>
            <param name="easing">The easing to use.</param>
            <param name="callback">The callback to invoke once the animation is completed.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Show(jQueryApi.EffectDuration)">
            <summary>
            Show the matched set of elements in an animated manner.
            </summary>
            <param name="duration">The duration of the animation.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Show(jQueryApi.EffectDuration,System.Action)">
            <summary>
            Show the matched set of elements in an animated manner.
            </summary>
            <param name="duration">The duration of the animation.</param>
            <param name="callback">The callback to invoke once the animation is completed.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Show(jQueryApi.EffectDuration,jQueryApi.EffectEasing,System.Action)">
            <summary>
            Show the matched set of elements in an animated manner.
            </summary>
            <param name="duration">The duration of the animation.</param>
            <param name="easing">The easing to use.</param>
            <param name="callback">The callback to invoke once the animation is completed.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Siblings">
            <summary>
            Gets a new jQueryObject containing the siblings of each of the matched elements.
            </summary>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Siblings(System.String)">
            <summary>
            Gets a new jQueryObject containing the siblings of each of the matched elements,
            filtered by the specified selector.
            </summary>
            <param name="selector">The selector to match elements.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Size">
            <summary>
            Gets the number of matched elements. <seealso cref="P:jQueryApi.jQueryObject.Length"/> is slightly faster.
            </summary>
            <returns>The number of elements represented by this jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Slice(System.Int32)">
            <summary>
            Returns a new jQueryObject with the specified range of elements within the
            matching set of elements.
            </summary>
            <param name="startIndex">The index of starting point of the range. Negative to indicate offset from end.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Slice(System.Int32,System.Int32)">
            <summary>
            Returns a new jQueryObject with the specified range of elements within the
            matching set of elements.
            </summary>
            <param name="startIndex">The index of starting point of the range. Negative to indicate offset from end.</param>
            <param name="endIndex">The index of ending point of the range. Negative to indicate offset from end.</param>
            <returns>The new jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.SlideDown">
            <summary>
            Slides down the matching set of elements using a default duration of 400ms.
            </summary>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.SlideDown(System.Int32)">
            <summary>
            Slides down the matching set of elements using a the specified duration.
            </summary>
            <param name="duration">The duration in milliseconds for the effect.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.SlideDown(System.Int32,System.Action)">
            <summary>
            Slides down the matching set of elements using a the specified duration.
            </summary>
            <param name="duration">The duration in milliseconds for the effect.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.SlideDown(System.Int32,jQueryApi.EffectEasing,System.Action)">
            <summary>
            Slides down the matching set of elements using a the specified duration.
            </summary>
            <param name="duration">The duration in milliseconds for the effect.</param>
            <param name="easing">The easing to use.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.SlideDown(jQueryApi.EffectDuration)">
            <summary>
            Slides down the matching set of elements using a the specified duration.
            </summary>
            <param name="duration">The duration for the effect.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.SlideDown(jQueryApi.EffectDuration,System.Action)">
            <summary>
            Slides down the matching set of elements using a the specified duration.
            </summary>
            <param name="duration">The duration for the effect.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.SlideDown(jQueryApi.EffectDuration,jQueryApi.EffectEasing,System.Action)">
            <summary>
            Slides down the matching set of elements using a the specified duration.
            </summary>
            <param name="duration">The duration for the effect.</param>
            <param name="easing">The easing to use.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.SlideToggle">
            <summary>
            Toggles the visibility of the matching set of elements by sliding them
            using a default duration of 400ms.
            </summary>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.SlideToggle(System.Int32)">
            <summary>
            Toggles the visibility of the matching set of elements by sliding them
            using the specified duration.
            </summary>
            <param name="duration">The duration in milliseconds for the effect.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.SlideToggle(System.Int32,System.Action)">
            <summary>
            Toggles the visibility of the matching set of elements by sliding them
            using the specified duration.
            </summary>
            <param name="duration">The duration in milliseconds for the effect.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.SlideToggle(System.Int32,jQueryApi.EffectEasing,System.Action)">
            <summary>
            Toggles the visibility of the matching set of elements by sliding them
            using the specified duration.
            </summary>
            <param name="duration">The duration in milliseconds for the effect.</param>
            <param name="easing">The easing to use.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.SlideToggle(jQueryApi.EffectDuration)">
            <summary>
            Toggles the visibility of the matching set of elements by sliding them
            using the specified duration.
            </summary>
            <param name="duration">The duration for the effect.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.SlideToggle(jQueryApi.EffectDuration,System.Action)">
            <summary>
            Toggles the visibility of the matching set of elements by sliding them
            using the specified duration.
            </summary>
            <param name="duration">The duration for the effect.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.SlideUp">
            <summary>
            Slides up the matching set of elements using a default duration of 400ms.
            </summary>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.SlideUp(System.Int32)">
            <summary>
            Slides up the matching set of elements using a the specified duration.
            </summary>
            <param name="duration">The duration in milliseconds for the effect.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.SlideUp(System.Int32,System.Action)">
            <summary>
            Slides up the matching set of elements using a the specified duration.
            </summary>
            <param name="duration">The duration in milliseconds for the effect.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.SlideUp(System.Int32,jQueryApi.EffectEasing,System.Action)">
            <summary>
            Slides up the matching set of elements using a the specified duration.
            </summary>
            <param name="duration">The duration in milliseconds for the effect.</param>
            <param name="easing">The easing to use.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.SlideUp(jQueryApi.EffectDuration)">
            <summary>
            Slides up the matching set of elements using a the specified duration.
            </summary>
            <param name="duration">The duration for the effect.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.SlideUp(jQueryApi.EffectDuration,System.Action)">
            <summary>
            Slides up the matching set of elements using a the specified duration.
            </summary>
            <param name="duration">The duration for the effect.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.SlideUp(jQueryApi.EffectDuration,jQueryApi.EffectEasing,System.Action)">
            <summary>
            Slides up the matching set of elements using a the specified duration.
            </summary>
            <param name="duration">The duration for the effect.</param>
            <param name="easing">The easing to use.</param>
            <param name="callback">The callback to invoke upon completion.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Stop">
            <summary>
            Stops the current animation associated with the matched elements.
            </summary>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Stop(System.Boolean)">
            <summary>
            Stops the current animation associated with the matched elements.
            </summary>
            <param name="clearQueue">Whether to clear the queue of animations not started yet.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Stop(System.Boolean,System.Boolean)">
            <summary>
            Stops the current animation associated with the matched elements.
            </summary>
            <param name="clearQueue">Whether to clear the queue of animations not started yet.</param>
            <param name="gotoEnd">Whether to immediately complete the current animation.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Submit">
            <summary>
            Triggers the submit event on each of the matched set of elements.
            </summary>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Submit(jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the submit event on each of the matched set of elements.
            </summary>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Submit(System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the submit event on each of the matched set of elements.
            </summary>
            <param name="eventData">Data to be passed to the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.SwitchClass(System.String,System.Boolean)">
            <summary>
            Adds or removes the specified class from each of the set of matched elements.
            </summary>
            <param name="className">The class to toggle.</param>
            <param name="add">true if the class should be added; false otherwise.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.SwitchClass(jQueryApi.StringFunction,System.Boolean)">
            <summary>
            Adds or removes the class returned from the function for the set of matched elements.
            </summary>
            <param name="cssFunction">The function returning the class to toggle.</param>
            <param name="add">true if the class should be added; false otherwise.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.SwitchClass(jQueryApi.StringReplaceFunction,System.Boolean)">
            <summary>
            Adds or removes the class returned from the function for the set of matched elements.
            </summary>
            <param name="cssFunction">The function returning the class to toggle.</param>
            <param name="add">true if the class should be added; false otherwise.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Text(System.String)">
            <summary>
            Sets the text content of the matched set of elements.
            </summary>
            <param name="text">The new text to set.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Text(jQueryApi.StringFunction)">
            <summary>
            Sets the text content of the matched set of elements by calling the specified
            function.
            </summary>
            <param name="textFunction">The function that returns the text content.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Text(jQueryApi.StringReplaceFunction)">
            <summary>
            Sets the text content of the matched set of elements by calling the specified
            function.
            </summary>
            <param name="textFunction">The function that returns the text content.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.ToArray">
            <summary>
            Returns the matching set of elements as an array.
            </summary>
            <returns>An array containing the matched elements.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Toggle">
            <summary>
            Toggles visibility of the matched set of elements.
            </summary>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Toggle(System.Boolean)">
            <summary>
            Toggles visibility of the matched set of elements.
            </summary>
            <param name="showOrHide">True to show; false to hide.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Toggle(System.Int32)">
            <summary>
            Toggle the visibility of the set of matched elements in an animated manner.
            </summary>
            <param name="duration">The duration in milliseconds of the animation.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Toggle(System.Int32,System.Action)">
            <summary>
            Toggle the visibility of the set of matched elements in an animated manner.
            </summary>
            <param name="duration">The duration in milliseconds of the animation.</param>
            <param name="callback">The callback to invoke once the animation is completed.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Toggle(System.Int32,jQueryApi.EffectEasing,System.Action)">
            <summary>
            Toggle the visibility of the set of matched elements in an animated manner.
            </summary>
            <param name="duration">The duration in milliseconds of the animation.</param>
            <param name="easing">The easing to use.</param>
            <param name="callback">The callback to invoke once the animation is completed.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Toggle(jQueryApi.EffectDuration)">
            <summary>
            Toggle the visibility of the set of matched elements in an animated manner.
            </summary>
            <param name="duration">The duration of the animation.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Toggle(jQueryApi.EffectDuration,System.Action)">
            <summary>
            Toggle the visibility of the set of matched elements in an animated manner.
            </summary>
            <param name="duration">The duration of the animation.</param>
            <param name="callback">The callback to invoke once the animation is completed.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Toggle(jQueryApi.EffectDuration,jQueryApi.EffectEasing,System.Action)">
            <summary>
            Toggle the visibility of the set of matched elements in an animated manner.
            </summary>
            <param name="duration">The duration of the animation.</param>
            <param name="easing">The easing to use.</param>
            <param name="callback">The callback to invoke once the animation is completed.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Toggle(jQueryApi.jQueryEventHandler,jQueryApi.jQueryEventHandler)">
            <summary>
            Bind two or more handlers to the matched elements, to be executed on alternate clicks.
            </summary>
            <param name="evenEventHandler">A function to execute every even time the element is clicked.</param>
            <param name="oddEventHandler">A function to execute every odd time the element is clicked.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Toggle(jQueryApi.jQueryEventHandler,jQueryApi.jQueryEventHandler,jQueryApi.jQueryEventHandler[])">
            <summary>
            Bind two or more handlers to the matched elements, to be executed on alternate clicks.
            </summary>
            <param name="evenEventHandler">A function to execute every even time the element is clicked.</param>
            <param name="oddEventHandler">A function to execute every odd time the element is clicked.</param>
            <param name="eventHandlers">Additional handlers to cycle through after clicks.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.ToggleClass(System.String)">
            <summary>
            Toggles the specified class from each of the set of matched elements.
            </summary>
            <param name="className">The class to toggle.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.ToggleClass(jQueryApi.StringFunction)">
            <summary>
            Toggles the class returned from the function for the set of matched elements.
            </summary>
            <param name="cssFunction">The function returning the class to toggle.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.ToggleClass(jQueryApi.StringReplaceFunction)">
            <summary>
            Toggles the class returned from the function for the set of matched elements.
            </summary>
            <param name="cssFunction">The function returning the class to toggle.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Trigger(System.String)">
            <summary>
            Triggers the event handlers attached for the specified event on the
            matched set of elements.
            </summary>
            <param name="eventName">The event to trigger.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Trigger(System.String,System.Object[])">
            <summary>
            Triggers the event handlers attached for the specified event on the
            matched set of elements.
            </summary>
            <param name="eventName">The event to trigger.</param>
            <param name="eventParameters">Additional parameters for the event handler.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.TriggerHandler(System.String)">
            <summary>
            Triggers the first event handler attached for the first matched element.
            This does not trigger the default DOM behavior of the event.
            </summary>
            <param name="eventName">The event to trigger.</param>
            <returns>The result of the event handler.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.TriggerHandler(System.String,System.Object[])">
            <summary>
            Triggers the first event handler attached for the first matched element.
            This does not trigger the default DOM behavior of the event.
            </summary>
            <param name="eventName">The event to trigger.</param>
            <param name="eventParameters">Additional parameters for the event handler.</param>
            <returns>The result of the event handler.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Unbind">
            <summary>
            Removes all event handlers attached to the matched set of elements
            </summary>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Unbind(System.String)">
            <summary>
            Detaches a handler for the specified event on the matched set of elements.
            </summary>
            <param name="eventName">The event to detach handlers for.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Unbind(jQueryApi.jQueryEvent)">
            <summary>
            Detaches a handler for the specified event on the matched set of elements.
            </summary>
            <param name="e">The event passed in into an event handler.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Unbind(System.String,jQueryApi.jQueryEventHandler)">
            <summary>
            Detaches a handler for the specified event on the matched set of elements.
            </summary>
            <param name="eventName">The name of the event.</param>
            <param name="eventHandler">The event handler to be detached.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Unbind(System.String,System.Boolean)">
            <summary>
            Detaches the "return false" handler that was bound earlier.
            </summary>
            <param name="eventName">The name of the event.</param>
            <param name="result">Should be false.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Undelegate(System.String)">
            <summary>
            Detaches all handlers from matching the specified namespace
            from the matched set of elements.
            </summary>
            <param name="namespaceName">The namespace of the handler.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Undelegate(System.String,System.String)">
            <summary>
            Detaches all handlers from handling the specified event on elements matching the
            specified selector within the matched set of elements.
            </summary>
            <param name="selector">The selector to match elements.</param>
            <param name="eventName">The name of the event.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Undelegate(System.String,System.String,jQueryApi.jQueryEventHandler)">
            <summary>
            Detaches the specified handler from handling the specified event on elements matching the
            specified selector within the matched set of elements.
            </summary>
            <param name="selector">The selector to match elements.</param>
            <param name="eventName">The name of the event.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Unload(jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the unload event on each of the matched set of elements.
            </summary>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Unload(System.Collections.Dictionary,jQueryApi.jQueryEventHandler)">
            <summary>
            Attaches a handler to the unload event on each of the matched set of elements.
            </summary>
            <param name="eventData">Data to be passed to the event handler.</param>
            <param name="eventHandler">The event handler to be invoked.</param>
            <returns>The current jQueryObject</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Unwrap">
            <summary>
            Remove the parents of the set of matched elements from the DOM, leaving the
            matched elements in their place.
            </summary>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Value(System.String)">
            <summary>
            Sets the value attribute of the matched set of elements.
            </summary>
            <param name="value">The new value to set.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Value(jQueryApi.StringFunction)">
            <summary>
            Sets the value attribute of the matched set of elements using values returned
            from the specified function.
            </summary>
            <param name="valueFunction">The function returning the values to set.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Value(jQueryApi.StringReplaceFunction)">
            <summary>
            Sets the value attribute of the matched set of elements using values returned
            from the specified function.
            </summary>
            <param name="valueFunction">The function returning the values to set.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Width(System.Int32)">
            <summary>
            Sets the width of each of the matched elements.
            </summary>
            <param name="width">Thew new width.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Width(System.String)">
            <summary>
            Sets the width of each of the matched elements.
            </summary>
            <param name="width">Thew new width.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Wrap(System.String)">
            <summary>
            Wraps an HTML structure around each of the matched set of elements.
            </summary>
            <param name="htmlSnippet">The HTML to wrap with.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Wrap(System.Html.Element)">
            <summary>
            Wraps a DOM element around each of the matched set of elements.
            </summary>
            <param name="element">A DOM element specifying the structure.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Wrap(jQueryApi.jQueryObject)">
            <summary>
            Wraps a jQueryObject around each of the matched set of elements.
            </summary>
            <param name="element">A jQueryObject specifying the structure.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.Wrap(jQueryApi.StringFunction)">
            <summary>
            Wraps an HTML structure around each of the matched set of elements as
            returned from the specified wrapping function.
            </summary>
            <param name="wrappingFunction">The functio returning the HTML to wrap with.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.WrapAll(System.String)">
            <summary>
            Wraps an HTML structure around all elements in the set of matched elements.
            </summary>
            <param name="htmlSnippet">The HTML to wrap with.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.WrapAll(System.Html.Element)">
            <summary>
            Wraps an HTML structure around all elements in the set of matched elements.
            </summary>
            <param name="element">A DOM element specifying the structure.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.WrapAll(jQueryApi.jQueryObject)">
            <summary>
            Wraps an HTML structure around all elements in the set of matched elements.
            </summary>
            <param name="element">A jQueryObject specifying the structure.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.WrapInner(System.String)">
            <summary>
            Wraps an HTML structure around the content of each of the matched set of elements.
            </summary>
            <param name="htmlSnippet">The HTML to wrap with.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.WrapInner(System.Html.Element)">
            <summary>
            Wraps a DOM element around the content of each of the matched set of elements.
            </summary>
            <param name="element">A DOM element specifying the structure.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.WrapInner(jQueryApi.jQueryObject)">
            <summary>
            Wraps a jQueryObject around the content of each of the matched set of elements.
            </summary>
            <param name="element">A jQueryObject specifying the structure.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="M:jQueryApi.jQueryObject.WrapInner(jQueryApi.StringFunction)">
            <summary>
            Wraps an HTML structure around the content of each of the matched set of elements as
            returned from the specified wrapping function.
            </summary>
            <param name="wrappingFunction">The functio returning the HTML to wrap with.</param>
            <returns>The current jQueryObject.</returns>
        </member>
        <member name="P:jQueryApi.jQueryObject.Context">
            <summary>
            Gets the Document or DOM element used as the context to match
            this set of elements.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryObject.Length">
            <summary>
            Gets the number of elements in this <see cref="T:jQueryApi.jQueryObject"/>.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryObject.Selector">
            <summary>
            Gets the selector used to match this set of elements.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryObject.Item(System.Int32)">
            <summary>
            Gets the matched element at the specified index.
            </summary>
            <param name="index">The index to lookup.</param>
            <returns>The DOM element at the specified index.</returns>
        </member>
        <member name="T:jQueryApi.AjaxCallback">
            <summary>
            A callback to be invoked for an Ajax request.
            </summary>
            <param name="data">The result of the request.</param>
        </member>
        <member name="T:jQueryApi.AjaxCallback`1">
            <summary>
            A callback to be invoked for an Ajax request.
            </summary>
            <param name="data">The result of the request.</param>
        </member>
        <member name="T:jQueryApi.AjaxRequestCallback">
            <summary>
            A callback to be invoked for an Ajax request.
            </summary>
            <param name="data">The result of the request.</param>
            <param name="textStatus">The status of the request.</param>
            <param name="request">The request that was invoked.</param>
        </member>
        <member name="T:jQueryApi.AjaxRequestCallback`1">
            <summary>
            A callback to be invoked for an Ajax request.
            </summary>
            <param name="data">The result of the request.</param>
            <param name="textStatus">The status of the request.</param>
            <param name="request">The request that was invoked.</param>
        </member>
        <member name="T:jQueryApi.AjaxErrorCallback">
            <summary>
            A callback to be invoked for a failed Ajax request.
            </summary>
            <param name="request">The request that was invoked.</param>
            <param name="textStatus">The status of the request.</param>
            <param name="error">The error or exception if any.</param>
        </member>
        <member name="T:jQueryApi.AjaxErrorCallback`1">
            <summary>
            A callback to be invoked for a failed Ajax request.
            </summary>
            <param name="request">The request that was invoked.</param>
            <param name="textStatus">The status of the request.</param>
            <param name="error">The error or exception if any.</param>
        </member>
        <member name="T:jQueryApi.AjaxCompletedCallback">
            <summary>
            A callback to be invoked for a completed Ajax request.
            </summary>
            <param name="request">The request that was invoked.</param>
            <param name="textStatus">The status of the request.</param>
        </member>
        <member name="T:jQueryApi.AjaxCompletedCallback`1">
            <summary>
            A callback to be invoked for a completed Ajax request.
            </summary>
            <param name="request">The request that was invoked.</param>
            <param name="textStatus">The status of the request.</param>
        </member>
        <member name="T:jQueryApi.AjaxSendingCallback">
            <summary>
            A callback to be invoked for an Ajax request being sent.
            </summary>
            <param name="request">The request that was invoked.</param>
        </member>
        <member name="T:jQueryApi.AjaxSendingCallback`1">
            <summary>
            A callback to be invoked for an Ajax request being sent.
            </summary>
            <param name="request">The request that was invoked.</param>
        </member>
        <member name="T:jQueryApi.XmlHttpRequestCreator">
            <summary>
            Creates a jQueryXmlHttpRequest object.
            </summary>
            <returns>A newly created request instance.</returns>
        </member>
        <member name="T:jQueryApi.AjaxEventHandler">
            <summary>
            Handles ajax events.
            </summary>
            <param name="e">The event information.</param>
            <param name="request">The request instance.</param>
            <param name="options">The Ajax options associated with the request.</param>
        </member>
        <member name="T:jQueryApi.AjaxEventHandler`1">
            <summary>
            Handles ajax events.
            </summary>
            <param name="e">The event information.</param>
            <param name="request">The request instance.</param>
            <param name="options">The Ajax options associated with the request.</param>
        </member>
        <member name="T:jQueryApi.AjaxErrorEventHandler">
            <summary>
            Handles ajax error events.
            </summary>
            <param name="e">The event information.</param>
            <param name="request">The request instance.</param>
            <param name="options">The Ajax options associated with the request.</param>
            <param name="error">The error information.</param>
        </member>
        <member name="T:jQueryApi.AjaxErrorEventHandler`1">
            <summary>
            Handles ajax error events.
            </summary>
            <param name="e">The event information.</param>
            <param name="request">The request instance.</param>
            <param name="options">The Ajax options associated with the request.</param>
            <param name="error">The error information.</param>
        </member>
        <member name="T:jQueryApi.ArrayMapCallback">
            <summary>
            A callback to be invoked for each item in an array being mapped.
            </summary>
            <param name="item">The item within the array.</param>
            <param name="index">The index of the item.</param>
            <returns>The value that the item was mapped to.</returns>
        </member>
        <member name="T:jQueryApi.ArrayFilterCallback">
            <summary>
            A callback to be invoked for each item in an array being filtered.
            </summary>
            <param name="item">The item within the array.</param>
            <param name="index">The index of the item.</param>
            <returns>True if the value satisfies the filter; false if it doesn't.</returns>
        </member>
        <member name="T:jQueryApi.jQueryAjaxOptions">
            <summary>
            Represents Ajax request settings or options.
            </summary>
        </member>
        <member name="M:jQueryApi.jQueryAjaxOptions.#ctor">
            <summary>
            Initializes an empty instance of a jQueryAjaxOptions object.
            </summary>
        </member>
        <member name="M:jQueryApi.jQueryAjaxOptions.#ctor(System.Object[])">
            <summary>
            Initializes an instance of a jQueryAjaxOptions object with the
            specified name/value pair list of fields.
            </summary>
            <param name="nameValuePairs">An alternating set of string names and object values.</param>
        </member>
        <member name="P:jQueryApi.jQueryAjaxOptions.Async">
            <summary>
            Gets or sets whether the request is async.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryAjaxOptions.BeforeSend">
            <summary>
            Gets or sets the callback to invoke before the request is sent.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryAjaxOptions.Cache">
            <summary>
            Gets or sets whether the request can be cached.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryAjaxOptions.Complete">
            <summary>
            Gets or sets the callback invoked after the request is completed
            and success or error callbacks have been invoked.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryAjaxOptions.ContentType">
            <summary>
            Gets or sets the content type of the data sent to the server.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryAjaxOptions.Context">
            <summary>
            Gets or sets the element that will be the context for the request.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryAjaxOptions.Data">
            <summary>
            Gets or sets the data to be sent to the server.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryAjaxOptions.DataType">
            <summary>
            Gets or sets the data type expected in response from the server.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryAjaxOptions.Error">
            <summary>
            Gets or sets the callback to be invoked if the request fails.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryAjaxOptions.Global">
            <summary>
            Gets or sets whether to trigger global event handlers for this Ajax request.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryAjaxOptions.IfModified">
            <summary>
            Gets or sets whether the request is successful only if its been modified since
            the last request.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryAjaxOptions.IsLocal">
            <summary>
            Gets or sets whether the current environment should be treated as a local
            environment (eg. when the page is loaded using file:///).
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryAjaxOptions.Jsonp">
            <summary>
            Gets or sets the callback parameter name to use for JSONP requests.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryAjaxOptions.JsonpCallback">
            <summary>
            Gets or sets the callback name to use for JSONP requests.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryAjaxOptions.MimeType">
            <summary>
            Gets or sets the mime type of the request.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryAjaxOptions.Password">
            <summary>
            Gets or sets the password to be used for an HTTP authentication request.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryAjaxOptions.ProcessData">
            <summary>
            Gets or sets whether the data passed in will be processed.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryAjaxOptions.ScriptCharset">
            <summary>
            Gets or sets how to handle character sets for script and JSONP requests.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryAjaxOptions.Success">
            <summary>
            Gets or sets the function to invoke upon successful completion of the request.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryAjaxOptions.Timeout">
            <summary>
            Gets or sets the timeout in milliseconds for the request.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryAjaxOptions.Traditional">
            <summary>
            Gets or sets if you want to use traditional parameter serialization.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryAjaxOptions.Type">
            <summary>
            Gets or sets the type or HTTP verb associated with the request.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryAjaxOptions.Url">
            <summary>
            Gets or sets the URL to be requested.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryAjaxOptions.Username">
            <summary>
            Gets or sets the name of the user to use in a HTTP authentication request.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryAjaxOptions.XmlHttpRequestCreator">
            <summary>
            Gets or sets the function creating the XmlHttpRequest instance.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryAjaxOptions.XhrFields">
            <summary>
            Gets or sets a set of additional name/value pairs set of the XmlHttpRequest
            object.
            </summary>
        </member>
        <member name="T:jQueryApi.EffectEasing">
            <summary>
            Basic effect easing functions.
            </summary>
        </member>
        <member name="T:jQueryApi.EffectDuration">
            <summary>
            Stock duration values for effects.
            </summary>
        </member>
        <member name="T:jQueryApi.jQueryNameValuePair">
            <summary>
            Represents a name and value.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryNameValuePair.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryNameValuePair.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="T:jQueryApi.ObjectMapCallback">
            <summary>
            A callback to be invoked for each item in an object being mapped.
            </summary>
            <param name="item">The item within the object.</param>
            <param name="key">The key of the item.</param>
            <returns>The value that the item was mapped to.</returns>
        </member>
        <member name="T:jQueryApi.PositionFunction">
            <summary>
            A callback that returns a value for the element at the specified index.
            </summary>
            <param name="index">The index of the element in the set.</param>
        </member>
        <member name="T:jQueryApi.PositionReplaceFunction">
            <summary>
            A callback that returns a value for the element at the specified index.
            </summary>
            <param name="index">The index of the element in the set.</param>
            <param name="currentValue">The current value.</param>
        </member>
        <member name="T:jQueryApi.jQueryPosition">
            <summary>
            Provides information about the position of an element.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryPosition.Left">
            <summary>
            Gets the left coordinate.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryPosition.Top">
            <summary>
            Gets the top coordinate.
            </summary>
        </member>
        <member name="T:jQueryApi.jQueryEventHandler">
            <summary>
            Handles a jQuery event.
            </summary>
        </member>
        <member name="T:jQueryApi.jQueryEvent">
            <summary>
            Provides information about the current event.
            </summary>
        </member>
        <member name="M:jQueryApi.jQueryEvent.IsDefaultPrevented">
            <summary>
            Gets whether PreventDefault has been called on this event.
            </summary>
            <returns>True if PreventDefault was called. False otherwise.</returns>
        </member>
        <member name="M:jQueryApi.jQueryEvent.IsImmediatePropagationStopped">
            <summary>
            Gets whether StopImmediatePropagation has been called on this event.
            </summary>
            <returns>True if StopImmediatePropagation was called. False otherwise.</returns>
        </member>
        <member name="M:jQueryApi.jQueryEvent.IsPropagationStopped">
            <summary>
            Gets whether StopPropagation has been called on this event.
            </summary>
            <returns>True if StopPropagation was called. False otherwise.</returns>
        </member>
        <member name="M:jQueryApi.jQueryEvent.PreventDefault">
            <summary>
            Prevents the default action associated with the event.
            </summary>
        </member>
        <member name="M:jQueryApi.jQueryEvent.StopImmediatePropagation">
            <summary>
            Prevents the rest of the handlers associated with the event from being invoked.
            </summary>
        </member>
        <member name="M:jQueryApi.jQueryEvent.StopPropagation">
            <summary>
            Prevents the event from being bubbled up the DOM tree.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryEvent.CurrentTarget">
            <summary>
            Gets the current DOM element within the event bubbling phase.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryEvent.Data">
            <summary>
            Gets the event data that was passed in into the Bind method.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryEvent.Namespace">
            <summary>
            Gets the namespace specified when the event was triggered.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryEvent.PageX">
            <summary>
            Gets the mouse position relative to left edge of the document.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryEvent.PageY">
            <summary>
            Gets the mouse position relative to top edge of the document.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryEvent.RelatedTarget">
            <summary>
            Gets the other DOM element associated with the event if any.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryEvent.Result">
            <summary>
            Gets the value returned by the last event handler if any.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryEvent.Target">
            <summary>
            Gets the DOM element that initiated the event.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryEvent.TimeStamp">
            <summary>
            Gets the number of milliseconds since Jan 1, 1970, when the event
            was triggered.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryEvent.Type">
            <summary>
            Gets the type or name of the event.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryEvent.Which">
            <summary>
            Gets the key or button that was pressed.
            </summary>
        </member>
        <member name="T:jQueryApi.ElementMapCallback">
            <summary>
            A callback to be invoked for each element in a jQueryObject being mapped.
            </summary>
            <param name="index">The index of the element.</param>
            <param name="element">The element.</param>
            <returns>The object that the element is mapped to.</returns>
        </member>
        <member name="T:jQueryApi.ElementFilterCallback">
            <summary>
            A callback to be invoked for each element in a jQueryObject being filtered.
            </summary>
            <param name="index">The index of the element in the matching set.</param>
            <returns>true if the element should be included; false otherwise.</returns>
        </member>
        <member name="T:jQueryApi.jQueryBrowser">
            <summary>
            Provides information about the current browser.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryBrowser.Opera">
            <summary>
            Gets whether the current browser is Opera.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryBrowser.Mozilla">
            <summary>
            Gets whether the current browser is a Mozilla-based browser.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryBrowser.MSIE">
            <summary>
            Gets whether the current browser is Microsoft Internet Explorer.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryBrowser.Safari">
            <summary>
            Gets whether the current browser is Safari.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryBrowser.Version">
            <summary>
            Gets the browser version information.
            </summary>
        </member>
        <member name="P:jQueryApi.jQueryBrowser.WebKit">
            <summary>
            Gets whether the current browser is WebKit-based.
            </summary>
        </member>
        <member name="T:jQueryApi.ElementIterationCallback">
            <summary>
            A callback to be invoked for each element in a jQueryObject being iterated.
            </summary>
            <param name="index">The index of the element.</param>
            <param name="element">The element.</param>
        </member>
        <member name="T:jQueryApi.ElementInterruptibleIterationCallback">
            <summary>
            A callback to be invoked for each element in a jQueryObject being iterated.
            </summary>
            <param name="index">The index of the element.</param>
            <param name="element">The element.</param>
            <returns>false if the iteration is to be stopped; true otherwise.</returns>
        </member>
        <member name="T:jQueryApi.jQuerySupport">
            <summary>
            Represents the properties that indicate existence of browser features
            and bugs.
            </summary>
        </member>
        <member name="P:jQueryApi.jQuerySupport.BoxModel">
            <summary>
            This is equal to true if the page and browser are rendered according to the
            W3C CSS Box Model.
            </summary>
        </member>
        <member name="P:jQueryApi.jQuerySupport.CssFloat">
            <summary>
            True if cssFloat is the name of the float CSS property. False if it is styleFloat.
            </summary>
        </member>
        <member name="P:jQueryApi.jQuerySupport.HrefNormalized">
            <summary>
            True if the browser leaves URLs returned from getAttribute("href") intact.
            </summary>
        </member>
        <member name="P:jQueryApi.jQuerySupport.HtmlSerialize">
            <summary>
            True is the browser properly serializes link elements when innerHTML is used.
            </summary>
        </member>
        <member name="P:jQueryApi.jQuerySupport.LeadingWhitespace">
            <summary>
            True if the browser preserves leading whitespace when innerHTML is used.
            </summary>
        </member>
        <member name="P:jQueryApi.jQuerySupport.NoCloneChecked">
            <summary>
            True if the browser does not copy over the checked expando when elements are cloned.
            </summary>
        </member>
        <member name="P:jQueryApi.jQuerySupport.NoCloneEvent">
            <summary>
            True if the browser does not clone event handlers when elements are cloned.
            </summary>
        </member>
        <member name="P:jQueryApi.jQuerySupport.ObjectAll">
            <summary>
            True if doing getElementsByTagName('*') on an object element returns all descendant elements.
            </summary>
        </member>
        <member name="P:jQueryApi.jQuerySupport.Opacity">
            <summary>
            True if a browser can properly interpret the opacity style property.
            </summary>
        </member>
        <member name="P:jQueryApi.jQuerySupport.ScriptEval">
            <summary>
            True if using appendChild/createTextNode to inject inline scripts executes them.
            </summary>
        </member>
        <member name="P:jQueryApi.jQuerySupport.Style">
            <summary>
            True if getAttribute("style") is able to return the inline style specified by an element.
            </summary>
        </member>
        <member name="P:jQueryApi.jQuerySupport.Tbody">
            <summary>
            True if the browser allows table elements without tbody elements.
            </summary>
        </member>
        <member name="T:jQueryApi.StringFunction">
            <summary>
            A callback that returns a value for the element at the specified index.
            </summary>
            <param name="index">The index of the element in the set.</param>
        </member>
        <member name="T:jQueryApi.StringReplaceFunction">
            <summary>
            A callback that returns a value for the element at the specified index.
            </summary>
            <param name="index">The index of the element in the set.</param>
            <param name="currentValue">The current value.</param>
        </member>
        <member name="T:jQueryApi.ObjectIterationCallback">
            <summary>
            A callback to be invoked for each property in an object being iterated.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The value of the property.</param>
        </member>
        <member name="T:jQueryApi.ObjectInterruptableIterationCallback">
            <summary>
            A callback to be invoked for each property in an object being iterated.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The value of the property.</param>
            <returns>false if the iteration is to be stopped; true otherwise.</returns>
        </member>
        <member name="T:jQueryApi.ArrayIterationCallback">
            <summary>
            A callback to be invoked for each item in an array being iterated.
            </summary>
            <param name="index">The index of the item.</param>
            <param name="value">The item within the array.</param>
        </member>
        <member name="T:jQueryApi.ArrayIterationCallback`1">
            <summary>
            A callback to be invoked for each item in an array being iterated.
            </summary>
            <param name="index">The index of the item.</param>
            <param name="value">The item within the array.</param>
        </member>
        <member name="T:jQueryApi.ArrayInterruptableIterationCallback">
            <summary>
            A callback to be invoked for each item in an array being iterated.
            </summary>
            <param name="index">The index of the item.</param>
            <param name="value">The item within the array.</param>
            <returns>false if the iteration is to be stopped; true otherwise.</returns>
        </member>
        <member name="T:jQueryApi.ArrayInterruptableIterationCallback`1">
            <summary>
            A callback to be invoked for each item in an array being iterated.
            </summary>
            <param name="index">The index of the item.</param>
            <param name="value">The item within the array.</param>
            <returns>false if the iteration is to be stopped; true otherwise.</returns>
        </member>
        <member name="T:jQueryApi.jQuery">
            <summary>
            The global jQuery object.
            </summary>
        </member>
        <member name="M:jQueryApi.jQuery.Ajax(System.String)">
            <summary>
            Issues an Ajax request.
            </summary>
            <param name="url">The endpoint to which the request is issued.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Ajax(System.String,jQueryApi.jQueryAjaxOptions)">
            <summary>
            Issues an Ajax request.
            </summary>
            <param name="url">The endpoint to which the request is issued.</param>
            <param name="options">The options and settings for the request to invoke.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Ajax(jQueryApi.jQueryAjaxOptions)">
            <summary>
            Issues an Ajax request.
            </summary>
            <param name="options">The options and settings for the request to invoke.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.AjaxRequest``1(System.String)">
            <summary>
            Issues an Ajax request.
            </summary>
            <param name="url">The endpoint to which the request is issued.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.AjaxRequest``1(System.String,jQueryApi.jQueryAjaxOptions)">
            <summary>
            Issues an Ajax request.
            </summary>
            <param name="url">The endpoint to which the request is issued.</param>
            <param name="options">The options and settings for the request to invoke.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.AjaxRequest``1(jQueryApi.jQueryAjaxOptions)">
            <summary>
            Issues an Ajax request.
            </summary>
            <param name="options">The options and settings for the request to invoke.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.AjaxSetup(jQueryApi.jQueryAjaxOptions)">
            <summary>
            Sets up defaults for future Ajax requests.
            </summary>
            <param name="options">The options and settings for Ajax requests.</param>
        </member>
        <member name="M:jQueryApi.jQuery.CustomEvent``1(System.String)">
            <summary>
            Creates an instance of a custom jQueryEvent object that contains custom
            data members.
            </summary>
            <param name="eventName">The name of the event.</param>
            <typeparam name="TEvent">The type of the event to create.</typeparam>
            <returns>A new jQueryEvent object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Deferred">
            <summary>
            Creates a new instance of a deferred object.
            </summary>
        </member>
        <member name="M:jQueryApi.jQuery.DeferredData``1">
            <summary>
            Creates a new instance of a deferred object.
            </summary>
        </member>
        <member name="M:jQueryApi.jQuery.Deferred(jQueryApi.jQueryDeferredInitializer)">
            <summary>
            Creates a new instance of a deferred object.
            </summary>
            <param name="initializer">An initializer callback to initialize the new deferred object.</param>
        </member>
        <member name="M:jQueryApi.jQuery.DeferredData``1(jQueryApi.jQueryDeferredInitializer{``0})">
            <summary>
            Creates a new instance of a deferred object.
            </summary>
            <param name="initializer">An initializer callback to initialize the new deferred object.</param>
        </member>
        <member name="M:jQueryApi.jQuery.Each(System.Array,jQueryApi.ArrayIterationCallback)">
            <summary>
            Iterates over items in the specified array and calls the callback
            for each item in the array.
            </summary>
            <param name="items">The array to iterate over.</param>
            <param name="callback">The callback to invoke for each item.</param>
        </member>
        <member name="M:jQueryApi.jQuery.Each``1(System.Collections.Generic.List{``0},jQueryApi.ArrayIterationCallback{``0})">
            <summary>
            Iterates over items in the specified array and calls the callback
            for each item in the array.
            </summary>
            <param name="items">The array to iterate over.</param>
            <param name="callback">The callback to invoke for each item.</param>
        </member>
        <member name="M:jQueryApi.jQuery.Each(System.Array,jQueryApi.ArrayInterruptableIterationCallback)">
            <summary>
            Iterates over items in the specified array and calls the callback
            for each item in the array. The callback can return false to
            break the iteration.
            </summary>
            <param name="items">The array to iterate over.</param>
            <param name="callback">The callback to invoke for each item.</param>
        </member>
        <member name="M:jQueryApi.jQuery.Each``1(System.Collections.Generic.List{``0},jQueryApi.ArrayInterruptableIterationCallback{``0})">
            <summary>
            Iterates over items in the specified array and calls the callback
            for each item in the array. The callback can return false to
            break the iteration.
            </summary>
            <param name="items">The array to iterate over.</param>
            <param name="callback">The callback to invoke for each item.</param>
        </member>
        <member name="M:jQueryApi.jQuery.Each(System.Object,jQueryApi.ObjectIterationCallback)">
            <summary>
            Iterates over properties of the specified object and calls the callback
            for each property/value of the object.
            </summary>
            <param name="obj">The object whose properties are to be iterated over..</param>
            <param name="callback">The callback to invoke for each property.</param>
        </member>
        <member name="M:jQueryApi.jQuery.Each(System.Object,jQueryApi.ObjectInterruptableIterationCallback)">
            <summary>
            Iterates over properties of the specified object and calls the callback
            for each property/value of the object. The callback can return false to
            break the iteration.
            </summary>
            <param name="obj">The object whose properties are to be iterated over..</param>
            <param name="callback">The callback to invoke for each property.</param>
        </member>
        <member name="M:jQueryApi.jQuery.Error(System.String)">
            <summary>
            Raises an error using the specified error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:jQueryApi.jQuery.Event(System.String)">
            <summary>
            Creates an instance of a jQueryEvent object.
            </summary>
            <param name="eventName">The name of the event.</param>
            <returns>A new jQueryEvent object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Extend(System.Object,System.Object[])">
            <summary>
            Merge the properties of one or more objects into the target object.
            </summary>
            <param name="target">The object that will contain the merged values.</param>
            <param name="objects">The objects to merge.</param>
            <returns>The merged object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Extend(System.Boolean,System.Object,System.Object[])">
            <summary>
            Merge the properties of one or more objects into the target object.
            </summary>
            <param name="deep">True if a deep copy is to be performed.</param>
            <param name="target">The object that will contain the merged values.</param>
            <param name="objects">The objects to merge.</param>
            <returns>The merged object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.ExtendDictionary``2(System.Collections.Generic.Dictionary{``0,``1},System.Collections.Generic.Dictionary{``0,``1}[])">
            <summary>
            Merge the properties of one or more objects into the target object.
            </summary>
            <param name="target">The dictionary that will contain the merged values.</param>
            <param name="dictionaries">The dictionary to merge.</param>
            <typeparam name="TKey">The type of keys within the dictionary.</typeparam>
            <typeparam name="TValue">The type of values within the dictionary.</typeparam>
            <returns>The merged dictionary.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.ExtendDictionary``2(System.Boolean,System.Collections.Generic.Dictionary{``0,``1},System.Collections.Generic.Dictionary{``0,``1}[])">
            <summary>
            Merge the properties of one or more objects into the target object.
            </summary>
            <param name="deep">True if a deep copy is to be performed.</param>
            <param name="target">The dictionary that will contain the merged values.</param>
            <param name="dictionaries">The dictionaries to merge.</param>
            <typeparam name="TKey">The type of keys within the dictionary.</typeparam>
            <typeparam name="TValue">The type of values within the dictionary.</typeparam>
            <returns>The merged dictionary.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.ExtendObject``1(``0,``0[])">
            <summary>
            Merge the properties of one or more objects into the target object.
            </summary>
            <param name="target">The object that will contain the merged values.</param>
            <param name="objects">The objects to merge.</param>
            <returns>The merged object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.ExtendObject``1(System.Boolean,``0,``0[])">
            <summary>
            Merge the properties of one or more objects into the target object.
            </summary>
            <param name="deep">True if a deep copy is to be performed.</param>
            <param name="target">The object that will contain the merged values.</param>
            <param name="objects">The objects to merge.</param>
            <returns>The merged object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.FromElement(System.Html.Element)">
            <summary>
            Wraps an instance of a <see cref="T:jQueryApi.jQueryObject"/> around the specified element.
            </summary>
            <param name="element">The element to wrap.</param>
            <returns>The resulting jQueryObject instance.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.FromElements(System.Html.Element[])">
            <summary>
            Wraps an instance of a <see cref="T:jQueryApi.jQueryObject"/> around the specified elements.
            </summary>
            <param name="elements">The elements to wrap.</param>
            <returns>The resulting jQueryObject instance.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.FromHtml(System.String)">
            <summary>
            Create DOM elements on-the-fly from the provided string of raw HTML and wraps
            them into a <see cref="T:jQueryApi.jQueryObject"/>.
            </summary>
            <param name="html">The HTML to parse.</param>
            <returns>The resulting jQueryObject instance.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.FromHtml(System.String,System.Html.DocumentInstance)">
            <summary>
            Create DOM elements on-the-fly from the provided string of raw HTML and wraps
            them into a <see cref="T:jQueryApi.jQueryObject"/>.
            </summary>
            <param name="html">The HTML to parse.</param>
            <param name="document">The document in which the elements will be created.</param>
            <returns>The resulting jQueryObject instance.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.FromHtml(System.String,System.Collections.Dictionary)">
            <summary>
            Creates a DOM element from the provided string defining a single tag and wraps
            it into a <see cref="T:jQueryApi.jQueryObject"/>.
            </summary>
            <param name="html">The HTML to parse.</param>
            <param name="properties">The attributes and events to set on the element.</param>
            <returns>The resulting jQueryObject instance.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.FromObject(System.Object)">
            <summary>
            Creates a jQueryObject from the specified object.
            </summary>
            <param name="o">The object to wrap.</param>
            <returns>The resulting jQueryObject instance.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Get(System.String)">
            <summary>
            Load data from the server using a HTTP GET request.
            </summary>
            <param name="url">The URL to request.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Get(System.String,jQueryApi.AjaxCallback{System.Object})">
            <summary>
            Load data from the server using a HTTP GET request.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="callback">The callback to invoke with the response.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Get(System.String,System.Object,jQueryApi.AjaxCallback{System.Object})">
            <summary>
            Load data from the server using a HTTP GET request.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="data">A string or dictionary containing the data sent with the request.</param>
            <param name="callback">The callback to invoke with the response.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Get(System.String,System.Object,jQueryApi.AjaxRequestCallback{System.Object})">
            <summary>
            Load data from the server using a HTTP GET request.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="data">A string or dictionary containing the data sent with the request.</param>
            <param name="callback">The callback to invoke with the response.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Get(System.String,System.Object,jQueryApi.AjaxCallback{System.Object},System.String)">
            <summary>
            Load data from the server using a HTTP GET request.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="data">A string or dictionary containing the data sent with the request.</param>
            <param name="callback">The callback to invoke with the response.</param>
            <param name="dataType">The type of data expected in the response.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Get(System.String,System.Object,jQueryApi.AjaxRequestCallback{System.Object},System.String)">
            <summary>
            Load data from the server using a HTTP GET request.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="data">A string or dictionary containing the data sent with the request.</param>
            <param name="callback">The callback to invoke with the response.</param>
            <param name="dataType">The type of data expected in the response.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.GetData``1(System.String)">
            <summary>
            Load data from the server using a HTTP GET request.
            </summary>
            <param name="url">The URL to request.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.GetData``1(System.String,jQueryApi.AjaxCallback{``0})">
            <summary>
            Load data from the server using a HTTP GET request.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="callback">The callback to invoke with the response.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.GetData``1(System.String,System.Object,jQueryApi.AjaxCallback{``0})">
            <summary>
            Load data from the server using a HTTP GET request.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="data">A string or dictionary containing the data sent with the request.</param>
            <param name="callback">The callback to invoke with the response.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.GetData``1(System.String,System.Object,jQueryApi.AjaxRequestCallback{``0})">
            <summary>
            Load data from the server using a HTTP GET request.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="data">A string or dictionary containing the data sent with the request.</param>
            <param name="callback">The callback to invoke with the response.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.GetData``1(System.String,System.Object,jQueryApi.AjaxCallback{``0},System.String)">
            <summary>
            Load data from the server using a HTTP GET request.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="data">A string or dictionary containing the data sent with the request.</param>
            <param name="callback">The callback to invoke with the response.</param>
            <param name="dataType">The type of data expected in the response.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.GetData``1(System.String,System.Object,jQueryApi.AjaxRequestCallback{``0},System.String)">
            <summary>
            Load data from the server using a HTTP GET request.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="data">A string or dictionary containing the data sent with the request.</param>
            <param name="callback">The callback to invoke with the response.</param>
            <param name="dataType">The type of data expected in the response.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.GetJson(System.String)">
            <summary>
            Load JSON data from the server using a HTTP GET request.
            </summary>
            <param name="url">The URL to request.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.GetJson(System.String,jQueryApi.AjaxCallback{System.Object})">
            <summary>
            Load JSON data from the server using a HTTP GET request.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="callback">The callback to invoke with the response.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.GetJson(System.String,System.Object,jQueryApi.AjaxCallback{System.Object})">
            <summary>
            Load JSON data from the server using a HTTP GET request.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="data">A string or dictionary containing the data sent with the request.</param>
            <param name="callback">The callback to invoke with the response.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.GetJsonData``1(System.String)">
            <summary>
            Load JSON data from the server using a HTTP GET request.
            </summary>
            <param name="url">The URL to request.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.GetJsonData``1(System.String,jQueryApi.AjaxCallback{``0})">
            <summary>
            Load JSON data from the server using a HTTP GET request.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="callback">The callback to invoke with the response.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.GetJsonData``1(System.String,System.Object,jQueryApi.AjaxCallback{``0})">
            <summary>
            Load JSON data from the server using a HTTP GET request.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="data">A string or dictionary containing the data sent with the request.</param>
            <param name="callback">The callback to invoke with the response.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.GetScript(System.String)">
            <summary>
            Load script from the server using a HTTP GET request and execute it.
            </summary>
            <param name="url">The URL to request.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.GetScript(System.String,jQueryApi.AjaxCallback{System.Object})">
            <summary>
            Load script from the server using a HTTP GET request and execute it.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="callback">The callback to invoke with the response.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Grep(System.Array,jQueryApi.ArrayFilterCallback)">
            <summary>
            Filters the specified array using the provided callback, and returns the
            matching items.
            </summary>
            <param name="a">The array to be filtered.</param>
            <param name="callback">The callback to filter the items.</param>
            <returns>The matching items.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Grep(System.Array,jQueryApi.ArrayFilterCallback,System.Boolean)">
            <summary>
            Filters the specified array using the provided callback, and returns the
            matching items.
            </summary>
            <param name="a">The array to be filtered.</param>
            <param name="callback">The callback to filter the items.</param>
            <param name="invert">If true, the items not matching are returned.</param>
            <returns>The matching items.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.HoldReady(System.Boolean)">
            <summary>
            Holds or releases the execution of jQuery's ready event.
            </summary>
            <param name="hold">Indicates whether the ready hold is being requested or released.</param>
        </member>
        <member name="M:jQueryApi.jQuery.InArray(System.Object,System.Array)">
            <summary>
            Gets the index of the specified value within the specified array.
            </summary>
            <param name="value">The value to look for.</param>
            <param name="a">The array to look in.</param>
            <returns>The index of value if it is found; -1 if it is not.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.InList``1(``0,System.Collections.Generic.List{``0})">
            <summary>
            Gets the index of the specified value within the specified list.
            </summary>
            <param name="value">The value to look for.</param>
            <param name="list">The list to look in.</param>
            <returns>The index of value if it is found; -1 if it is not.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.IsArray(System.Object)">
            <summary>
            Checks if the specified object is an array.
            </summary>
            <param name="o">The object to check.</param>
            <returns>True if the object is an array; false otherwise.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.IsFunction(System.Object)">
            <summary>
            Checks if the specified object is a function.
            </summary>
            <param name="o">The object to check.</param>
            <returns>True if the object is a function; false otherwise.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.IsWindow(System.Object)">
            <summary>
            Checks if the specified object is a window.
            </summary>
            <param name="o">The object to check.</param>
            <returns>True if the object is a window instance; false otherwise.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.MakeArray(System.Object)">
            <summary>
            Turns anything into a true array.
            </summary>
            <param name="o">The object to turn into an array.</param>
            <returns>The resulting array.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Map(System.Object,jQueryApi.ObjectMapCallback)">
            <summary>
            Returns a new object by mapping each item in the specified object
            using the provided callback.
            </summary>
            <param name="o">The object to map.</param>
            <param name="callback">The function that performs the mapping.</param>
            <returns>The array of mapped values.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Map(System.Array,jQueryApi.ArrayMapCallback)">
            <summary>
            Returns a new array by mapping each item in the specified array
            using the provided callback.
            </summary>
            <param name="a">The array of items to map.</param>
            <param name="callback">The function that performs the mapping.</param>
            <returns>The array of mapped values.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Merge(System.Array,System.Array)">
            <summary>
            Merges the specified arrays into a single array.
            </summary>
            <param name="firstArray">The first array to merge.</param>
            <param name="secondArray">The second array to merge.</param>
            <returns>The new array containing merged set of items.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.MergeLists``1(System.Collections.Generic.List{``0},System.Collections.Generic.List{``0})">
            <summary>
            Merges the specified lists into a single list.
            </summary>
            <param name="firstList">The first list to merge.</param>
            <param name="secondList">The second list to merge.</param>
            <returns>The new list containing merged set of items.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.OnDocumentReady(System.Action)">
            <summary>
            Calls the specified function when the document is ready. This is equivalent to
            jQuery(document).ready(callback).
            </summary>
            <param name="callback">The callback to invoke.</param>
            <returns>The resulting jQueryObject instance.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Param(System.Object)">
            <summary>
            Serializes an object for use in URL query string for an Ajax request.
            </summary>
            <param name="o">The object to serialize.</param>
            <returns>The serialized representation of the object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.ParseJson(System.String)">
            <summary>
            Parses the specified well-formed json string into an object.
            </summary>
            <param name="json">The json string.</param>
            <returns>The parsed document.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.ParseJsonData``1(System.String)">
            <summary>
            Parses the specified well-formed json string into an object.
            </summary>
            <param name="json">The json string.</param>
            <returns>The parsed document.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.ParseXml(System.String)">
            <summary>
            Parses the specified well-formed xml data into an XML document.
            </summary>
            <param name="data">The xml markup.</param>
            <returns>The parsed document.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Post(System.String)">
            <summary>
            Post data to the server using a HTTP POST request.
            </summary>
            <param name="url">The URL to request.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Post(System.String,jQueryApi.AjaxCallback{System.Object})">
            <summary>
            Post data to the server using a HTTP POST request.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="callback">The callback to invoke with the response.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Post(System.String,System.Object)">
            <summary>
            Post data to the server using a HTTP POST request.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="data">A string or dictionary containing the data sent with the request.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Post(System.String,System.Object,jQueryApi.AjaxCallback{System.Object})">
            <summary>
            Post data to the server using a HTTP POST request.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="data">A string or dictionary containing the data sent with the request.</param>
            <param name="callback">The callback to invoke with the response.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Post(System.String,System.Object,jQueryApi.AjaxRequestCallback{System.Object})">
            <summary>
            Post data to the server using a HTTP POST request.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="data">A string or dictionary containing the data sent with the request.</param>
            <param name="callback">The callback to invoke with the response.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Post(System.String,System.Object,jQueryApi.AjaxCallback{System.Object},System.String)">
            <summary>
            Post data to the server using a HTTP POST request.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="data">A string or dictionary containing the data sent with the request.</param>
            <param name="callback">The callback to invoke with the response.</param>
            <param name="dataType">The type of data expected in the response.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Post(System.String,System.Object,jQueryApi.AjaxRequestCallback{System.Object},System.String)">
            <summary>
            Post data to the server using a HTTP POST request.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="data">A string or dictionary containing the data sent with the request.</param>
            <param name="callback">The callback to invoke with the response.</param>
            <param name="dataType">The type of data expected in the response.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.PostRequest``1(System.String)">
            <summary>
            Post data to the server using a HTTP POST request.
            </summary>
            <param name="url">The URL to request.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.PostRequest``1(System.String,jQueryApi.AjaxCallback{``0})">
            <summary>
            Post data to the server using a HTTP POST request.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="callback">The callback to invoke with the response.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.PostRequest``1(System.String,System.Object,jQueryApi.AjaxCallback{``0})">
            <summary>
            Post data to the server using a HTTP POST request.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="data">A string or dictionary containing the data sent with the request.</param>
            <param name="callback">The callback to invoke with the response.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.PostRequest``1(System.String,System.Object,jQueryApi.AjaxRequestCallback{``0})">
            <summary>
            Post data to the server using a HTTP POST request.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="data">A string or dictionary containing the data sent with the request.</param>
            <param name="callback">The callback to invoke with the response.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.PostRequest``1(System.String,System.Object,jQueryApi.AjaxCallback{``0},System.String)">
            <summary>
            Post data to the server using a HTTP POST request.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="data">A string or dictionary containing the data sent with the request.</param>
            <param name="callback">The callback to invoke with the response.</param>
            <param name="dataType">The type of data expected in the response.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.PostRequest``1(System.String,System.Object,jQueryApi.AjaxRequestCallback{``0},System.String)">
            <summary>
            Post data to the server using a HTTP POST request.
            </summary>
            <param name="url">The URL to request.</param>
            <param name="data">A string or dictionary containing the data sent with the request.</param>
            <param name="callback">The callback to invoke with the response.</param>
            <param name="dataType">The type of data expected in the response.</param>
            <returns>The jQueryXmlHttpRequest object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Select(System.String)">
            <summary>
            Finds one or more DOM elements matching a CSS selector and wraps them into a
            <see cref="T:jQueryApi.jQueryObject"/> instance.
            </summary>
            <param name="selector">The selector to match elements.</param>
            <returns>The resulting jQueryObject instance.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Select(System.String,System.Html.DocumentInstance)">
            <summary>
            Finds one or more DOM elements matching a CSS selector and wraps them into a
            <see cref="T:jQueryApi.jQueryObject"/> instance. The elements are scoped to those contained
            within the specified document.
            </summary>
            <param name="selector">The selector to match elements.</param>
            <param name="document">The document to search within.</param>
            <returns>The resulting jQueryObject instance.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Select(System.String,System.Html.Element)">
            <summary>
            Finds one or more DOM elements matching a CSS selector and wraps them into a
            <see cref="T:jQueryApi.jQueryObject"/> instance. The elements are scoped to those contained
            within the specified root element.
            </summary>
            <param name="selector">The selector to match elements.</param>
            <param name="rootElement">The root element to begin the search at.</param>
            <returns>The resulting jQueryObject instance.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Select(System.String,jQueryApi.jQueryObject)">
            <summary>
            Finds one or more DOM elements matching a CSS selector and wraps them into a
            <see cref="T:jQueryApi.jQueryObject"/> instance. The elements are scoped to those contained
            within the specified jQueryObject context.
            </summary>
            <param name="selector">The selector to match elements.</param>
            <param name="context">The context to scope the selection.</param>
            <returns>The resulting jQueryObject instance.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Trim(System.String)">
            <summary>
            Removes whitespace from the beginning and end of the string.
            </summary>
            <param name="s">The string to trim.</param>
            <returns>The trimmed string.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.Type(System.Object)">
            <summary>
            Gets the type of the specified object.
            </summary>
            <param name="o">The object whose type is to be looked up.</param>
            <returns>The type name of the object.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.When(jQueryApi.IDeferred[])">
            <summary>
            Creates a deferred object representing the aggregate of the specified
            deferred objects.
            </summary>
            <param name="deferreds">The set of deferred objects.</param>
            <returns>A deferred object representing the individual deferred objects.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.When(System.Object[])">
            <summary>
            Creates a deferred object representing the aggregate of the specified
            deferred objects. If any of the objects are not deferred objects, then they
            are considered as pre-resolved deferred objects.
            </summary>
            <param name="deferreds">The set of deferred objects.</param>
            <returns>A deferred object representing the individual deferred objects.</returns>
        </member>
        <member name="M:jQueryApi.jQuery.WhenData``1(jQueryApi.IDeferred{``0}[])">
            <summary>
            Creates a deferred object representing the aggregate of the specified
            deferred objects.
            </summary>
            <param name="deferreds">The set of deferred objects.</param>
            <returns>A deferred object representing the individual deferred objects.</returns>
        </member>
        <member name="P:jQueryApi.jQuery.AnimationInterval">
            <summary>
            Gets or sets the rate (in milliseconds) at which animations fire.
            </summary>
        </member>
        <member name="P:jQueryApi.jQuery.AnimationsDisabled">
            <summary>
            Gets or sets whether animations are disabled or not.
            </summary>
        </member>
        <member name="P:jQueryApi.jQuery.Browser">
            <summary>
            Gets information about the current browser and its version.
            </summary>
        </member>
        <member name="P:jQueryApi.jQuery.Current">
            <summary>
            Gets the current jQueryObject against which a plugin method is invoked.
            </summary>
            <returns>The jQueryObject represented by 'this' within a plugin.</returns>
        </member>
        <member name="P:jQueryApi.jQuery.Document">
            <summary>
            Gets the current document object wrapped into a jQuery object.
            </summary>
        </member>
        <member name="P:jQueryApi.jQuery.Element">
            <summary>
            Gets the element passed in as 'this' within a jQuery callback function.
            </summary>
            <returns>The element represented by 'this' in a callback.</returns>
        </member>
        <member name="P:jQueryApi.jQuery.Instance">
            <summary>
            Gets the instance of the global jQuery object.
            </summary>
        </member>
        <member name="P:jQueryApi.jQuery.Support">
            <summary>
            Gets information about supported features and browser capabilities.
            </summary>
        </member>
        <member name="P:jQueryApi.jQuery.This">
            <summary>
            Gets the element passed in as 'this' within a jQuery callback function,
            wrapped into a jQueryObject.
            </summary>
            <returns>The jQueryObject for the element represented by 'this' in a callback.</returns>
        </member>
        <member name="P:jQueryApi.jQuery.Window">
            <summary>
            Gets the current window object wrapped into a jQuery object.
            </summary>
        </member>
    </members>
</doc>
